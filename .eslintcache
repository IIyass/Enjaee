[{"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/WebChat/index.js":"1","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/WebChat/reducer.js":"2","/home/ilyass/Freelance/Figma_India_Screen/app/src/helpers/index.js":"3","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/ChatScreen/index.js":"4","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/VideoChat/index.js":"5","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/WebChat/action.js":"6","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/VideoChat/style.js":"7","/home/ilyass/Freelance/Figma_India_Screen/app/src/WebRTC/index.js":"8","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/VideoChat/Screen.js":"9","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/usePrevious.js":"10","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useVideoRoom.js":"11","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useTimer.js":"12","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Contact/index.js":"13","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/Card/index.js":"14","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/index.js":"15","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/style.js":"16","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/Card/style.js":"17","/home/ilyass/Freelance/Figma_India_Screen/app/src/index.js":"18","/home/ilyass/Freelance/Figma_India_Screen/app/src/App.js":"19","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Reducer.js":"20","/home/ilyass/Freelance/Figma_India_Screen/app/src/Provider/AuthProvider/authProvider.js":"21","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/GroupChat/reducer.js":"22","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/LandingRoute.js":"23","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/TeamChat/reducer.js":"24","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Me/reducer.js":"25","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Contact/reducer.js":"26","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/PrivateRoute.js":"27","/home/ilyass/Freelance/Figma_India_Screen/app/src/firebaseService/authmethodes.js":"28","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/History/index.js":"29","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Landing/index.js":"30","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Login/index.js":"31","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/index.js":"32","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Signup/index.js":"33","/home/ilyass/Freelance/Figma_India_Screen/app/src/firebaseService/FirebaseIndex.js":"34","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/style.js":"35","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/TeamChat/action.js":"36","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/History/style.js":"37","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/GroupChat/action.js":"38","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Landing/styles.js":"39","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Login/style.js":"40","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Landing/Device.js":"41","/home/ilyass/Freelance/Figma_India_Screen/app/src/Data/ContactMockData.js":"42","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/SearchInput.js":"43","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/AuthInput.js":"44","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/FooterButton.js":"45","/home/ilyass/Freelance/Figma_India_Screen/app/src/Common/Body.js":"46","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/SortInput.js":"47","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ProfilInput.js":"48","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/LandingLayout/index.js":"49","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ProfilSelector.js":"50","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/style.js":"51","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/ProfilFooter.js":"52","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ProfilButton.js":"53","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/index.js":"54","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Me/action.js":"55","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Signup/style.js":"56","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/chatButton.js":"57","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Contact/action.js":"58","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/WebChat/style.js":"59","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/index.js":"60","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Contact/style.js":"61","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/TeamChat/actionType.js":"62","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/GroupChat/actionType.js":"63","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/index.js":"64","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Share/index.js":"65","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/DeviceButton.js":"66","/home/ilyass/Freelance/Figma_India_Screen/app/src/Common/Layout.js":"67","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/style.js":"68","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/AboutUs.js":"69","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/Condition.js":"70","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/Contact.js":"71","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/OTP/index.js":"72","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Me/actionType.js":"73","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/AudioChat/index.js":"74","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/WebChat/actionType.js":"75","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Contact/actionType.js":"76","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/style.js":"77","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/style.js":"78","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/LandingLayout/NavBar/index.js":"79","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Share/style.js":"80","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Model/index.js":"81","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/Footer/index.js":"82","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/NavBar/index.js":"83","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/OTP/style.js":"84","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/AudioChat/style.js":"85","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/ChatScreen/Words.js":"86","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/ChatScreen/style.js":"87","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ChatInput.js":"88","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/Card/index.js":"89","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/Contact/index.js":"90","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/GroupPerson/index.js":"91","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/AddGroup/index.js":"92","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/LandingLayout/NavBar/styles.js":"93","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Model/styles.js":"94","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/Card/index.js":"95","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/GroupPerson/Card.js":"96","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/style.js":"97","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/Contact/Card.js":"98","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/Card/style.js":"99","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/Card/style.js":"100","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/NavBar/styles.js":"101","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/Footer/style.js":"102","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/GroupPerson/CardStyle.js":"103","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/Contact/CardStyle.js":"104","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useUserData.js":"105","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/AddGroup/Card.js":"106","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/AddGroup/CardStyle.js":"107","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useUserName.js":"108","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/AllGroups/index.js":"109","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/Contact/index.js":"110","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/GroupsDetails/index.js":"111","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChat/index.js":"112","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChat/style.js":"113","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChatScreen/index.js":"114","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChatScreen/style.js":"115","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useTimerCountDown.js":"116","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Profil/index.js":"117","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Profil/style.js":"118","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/ChatScreen/index.js":"119","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/ChatScreen/style.js":"120"},{"size":6029,"mtime":1610149254656,"results":"121","hashOfConfig":"122"},{"size":1108,"mtime":1609772399432,"results":"123","hashOfConfig":"122"},{"size":1889,"mtime":1610154705252,"results":"124","hashOfConfig":"122"},{"size":2269,"mtime":1610124049133,"results":"125","hashOfConfig":"122"},{"size":6651,"mtime":1609963720047,"results":"126","hashOfConfig":"122"},{"size":3582,"mtime":1609947685159,"results":"127","hashOfConfig":"122"},{"size":2417,"mtime":1609797787196,"results":"128","hashOfConfig":"122"},{"size":2365,"mtime":1609796715698,"results":"129","hashOfConfig":"122"},{"size":722,"mtime":1609383386565,"results":"130","hashOfConfig":"122"},{"size":245,"mtime":1609383386649,"results":"131","hashOfConfig":"122"},{"size":893,"mtime":1609797658974,"results":"132","hashOfConfig":"122"},{"size":557,"mtime":1609965301855,"results":"133","hashOfConfig":"122"},{"size":4846,"mtime":1609965774134,"results":"134","hashOfConfig":"122"},{"size":6441,"mtime":1610328158755,"results":"135","hashOfConfig":"122"},{"size":2145,"mtime":1610328196372,"results":"136","hashOfConfig":"122"},{"size":459,"mtime":1608388302023,"results":"137","hashOfConfig":"122"},{"size":3629,"mtime":1610328716561,"results":"138","hashOfConfig":"122"},{"size":1229,"mtime":1608388302023,"results":"139","hashOfConfig":"122"},{"size":2077,"mtime":1610334931971,"results":"140","hashOfConfig":"122"},{"size":549,"mtime":1608503074738,"results":"141","hashOfConfig":"122"},{"size":1813,"mtime":1608388302023,"results":"142","hashOfConfig":"122"},{"size":1648,"mtime":1609791387679,"results":"143","hashOfConfig":"122"},{"size":426,"mtime":1608388302023,"results":"144","hashOfConfig":"122"},{"size":912,"mtime":1610158817013,"results":"145","hashOfConfig":"122"},{"size":1127,"mtime":1610327264261,"results":"146","hashOfConfig":"122"},{"size":1801,"mtime":1609771647556,"results":"147","hashOfConfig":"122"},{"size":410,"mtime":1608388302023,"results":"148","hashOfConfig":"122"},{"size":4387,"mtime":1610319512626,"results":"149","hashOfConfig":"122"},{"size":666,"mtime":1608461241968,"results":"150","hashOfConfig":"122"},{"size":3797,"mtime":1608462622202,"results":"151","hashOfConfig":"122"},{"size":3481,"mtime":1608464396775,"results":"152","hashOfConfig":"122"},{"size":6051,"mtime":1610328782065,"results":"153","hashOfConfig":"122"},{"size":3304,"mtime":1608464385768,"results":"154","hashOfConfig":"122"},{"size":807,"mtime":1608388302059,"results":"155","hashOfConfig":"122"},{"size":848,"mtime":1609433930930,"results":"156","hashOfConfig":"122"},{"size":3757,"mtime":1610159053213,"results":"157","hashOfConfig":"122"},{"size":206,"mtime":1608388302023,"results":"158","hashOfConfig":"122"},{"size":5448,"mtime":1610333913937,"results":"159","hashOfConfig":"122"},{"size":4099,"mtime":1608388302023,"results":"160","hashOfConfig":"122"},{"size":2014,"mtime":1608388302023,"results":"161","hashOfConfig":"122"},{"size":1013,"mtime":1608462523928,"results":"162","hashOfConfig":"122"},{"size":1999,"mtime":1608388302023,"results":"163","hashOfConfig":"122"},{"size":450,"mtime":1610290721808,"results":"164","hashOfConfig":"122"},{"size":1402,"mtime":1608464318370,"results":"165","hashOfConfig":"122"},{"size":322,"mtime":1608465776729,"results":"166","hashOfConfig":"122"},{"size":279,"mtime":1608461163882,"results":"167","hashOfConfig":"122"},{"size":2449,"mtime":1609968115637,"results":"168","hashOfConfig":"122"},{"size":360,"mtime":1608388302023,"results":"169","hashOfConfig":"122"},{"size":316,"mtime":1608388302023,"results":"170","hashOfConfig":"122"},{"size":2493,"mtime":1610296659168,"results":"171","hashOfConfig":"122"},{"size":3328,"mtime":1610328356717,"results":"172","hashOfConfig":"122"},{"size":1554,"mtime":1608464413579,"results":"173","hashOfConfig":"122"},{"size":261,"mtime":1610284571493,"results":"174","hashOfConfig":"122"},{"size":750,"mtime":1610328557799,"results":"175","hashOfConfig":"122"},{"size":2428,"mtime":1610327750135,"results":"176","hashOfConfig":"122"},{"size":1839,"mtime":1608388302023,"results":"177","hashOfConfig":"122"},{"size":1577,"mtime":1608388302023,"results":"178","hashOfConfig":"122"},{"size":4264,"mtime":1609771940320,"results":"179","hashOfConfig":"122"},{"size":1634,"mtime":1608502713512,"results":"180","hashOfConfig":"122"},{"size":447,"mtime":1608388302023,"results":"181","hashOfConfig":"122"},{"size":206,"mtime":1608388302023,"results":"182","hashOfConfig":"122"},{"size":445,"mtime":1610155795634,"results":"183","hashOfConfig":"122"},{"size":707,"mtime":1609502104442,"results":"184","hashOfConfig":"122"},{"size":1182,"mtime":1610329792363,"results":"185","hashOfConfig":"122"},{"size":938,"mtime":1608464450114,"results":"186","hashOfConfig":"122"},{"size":1272,"mtime":1608388302023,"results":"187","hashOfConfig":"122"},{"size":602,"mtime":1608388302023,"results":"188","hashOfConfig":"122"},{"size":3679,"mtime":1610290845152,"results":"189","hashOfConfig":"122"},{"size":699,"mtime":1610284092465,"results":"190","hashOfConfig":"122"},{"size":2852,"mtime":1608465879161,"results":"191","hashOfConfig":"122"},{"size":689,"mtime":1608465894061,"results":"192","hashOfConfig":"122"},{"size":1516,"mtime":1608464432950,"results":"193","hashOfConfig":"122"},{"size":356,"mtime":1610326689753,"results":"194","hashOfConfig":"122"},{"size":6603,"mtime":1609800032518,"results":"195","hashOfConfig":"122"},{"size":223,"mtime":1609771634864,"results":"196","hashOfConfig":"122"},{"size":619,"mtime":1609771630192,"results":"197","hashOfConfig":"122"},{"size":243,"mtime":1608464194370,"results":"198","hashOfConfig":"122"},{"size":405,"mtime":1608388302023,"results":"199","hashOfConfig":"122"},{"size":445,"mtime":1608388302023,"results":"200","hashOfConfig":"122"},{"size":1066,"mtime":1608388302023,"results":"201","hashOfConfig":"122"},{"size":568,"mtime":1608388302023,"results":"202","hashOfConfig":"122"},{"size":526,"mtime":1608462651909,"results":"203","hashOfConfig":"122"},{"size":2602,"mtime":1610328860394,"results":"204","hashOfConfig":"122"},{"size":1409,"mtime":1608388302023,"results":"205","hashOfConfig":"122"},{"size":2360,"mtime":1609799640935,"results":"206","hashOfConfig":"122"},{"size":1020,"mtime":1608568026501,"results":"207","hashOfConfig":"122"},{"size":2428,"mtime":1608388302023,"results":"208","hashOfConfig":"122"},{"size":801,"mtime":1608388302023,"results":"209","hashOfConfig":"122"},{"size":1777,"mtime":1608504886376,"results":"210","hashOfConfig":"122"},{"size":1027,"mtime":1610331335939,"results":"211","hashOfConfig":"122"},{"size":976,"mtime":1610333660753,"results":"212","hashOfConfig":"122"},{"size":893,"mtime":1609516822510,"results":"213","hashOfConfig":"122"},{"size":766,"mtime":1608388302023,"results":"214","hashOfConfig":"122"},{"size":494,"mtime":1608388302023,"results":"215","hashOfConfig":"122"},{"size":6730,"mtime":1610329961847,"results":"216","hashOfConfig":"122"},{"size":2207,"mtime":1610333637937,"results":"217","hashOfConfig":"122"},{"size":735,"mtime":1609428330702,"results":"218","hashOfConfig":"122"},{"size":3071,"mtime":1610331325463,"results":"219","hashOfConfig":"122"},{"size":2910,"mtime":1610329892980,"results":"220","hashOfConfig":"122"},{"size":2635,"mtime":1608388302023,"results":"221","hashOfConfig":"122"},{"size":1550,"mtime":1610328588128,"results":"222","hashOfConfig":"122"},{"size":613,"mtime":1608388302023,"results":"223","hashOfConfig":"122"},{"size":1715,"mtime":1610333499152,"results":"224","hashOfConfig":"122"},{"size":1885,"mtime":1610330894170,"results":"225","hashOfConfig":"122"},{"size":611,"mtime":1609433794923,"results":"226","hashOfConfig":"122"},{"size":1117,"mtime":1609516853674,"results":"227","hashOfConfig":"122"},{"size":1715,"mtime":1609428151341,"results":"228","hashOfConfig":"122"},{"size":451,"mtime":1609517723243,"results":"229","hashOfConfig":"122"},{"size":1321,"mtime":1610333889125,"results":"230","hashOfConfig":"122"},{"size":3547,"mtime":1610331839305,"results":"231","hashOfConfig":"122"},{"size":2033,"mtime":1610333371064,"results":"232","hashOfConfig":"122"},{"size":2936,"mtime":1610329688334,"results":"233","hashOfConfig":"122"},{"size":207,"mtime":1610329656046,"results":"234","hashOfConfig":"122"},{"size":3385,"mtime":1610335056124,"results":"235","hashOfConfig":"122"},{"size":1652,"mtime":1610139461875,"results":"236","hashOfConfig":"122"},{"size":438,"mtime":1610152929578,"results":"237","hashOfConfig":"122"},{"size":1470,"mtime":1610327427903,"results":"238","hashOfConfig":"122"},{"size":107,"mtime":1610284061276,"results":"239","hashOfConfig":"122"},{"size":2958,"mtime":1610335764351,"results":"240","hashOfConfig":"122"},{"size":1683,"mtime":1610335574058,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},"efftur",{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"245"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"245"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"245"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"245"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"245"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"245"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"245"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"245"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"245"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"245"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"245"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"245"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"245"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"245"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"245"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"245"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"245"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"245"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"245"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"245"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"245"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"245"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"245"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"245"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"245"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"245"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"245"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"245"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"245"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"245"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"245"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"245"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"245"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"245"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"245"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/WebChat/index.js",["519"],"import React, { useEffect, useCallback } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport * as Style from './style';\nimport Jolie from '../../Illustration/Henry.png'\nimport Input from '../../Components/UI/AuthInput'\nimport ChatButton from '../../Components/UI/chatButton';\nimport ChatScreen from '../../Components/ChatScreen'\nimport AudioChat from '../../Components/AudioChat';\nimport VideoChat from '../../Components/VideoChat';\nimport BodyContainer from '../../Common/Body';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport {\n    goToChatRoom,\n    goToAudioRoom,\n    goToVideoRoom,\n    SendMessage,\n    GetRoomMetaData\n} from '../../store/WebChat/action'\nimport { doVideoOffer, doCandidate, doVideoAnswer, leaveRoom } from '../../store/WebChat/action'\nimport { fetchMyData } from '../../store/Me/action';\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport 'webrtc-adapter';\n\nconst messagesRef = firestoreFirebase.collection('/messages');\n\nconst WebChat = (props) => {\n\n    const {\n        SendMessage,\n        goToAudioRoom,\n        goToChatRoom,\n        goToVideoRoom,\n        fetchMyData,\n        doCandidate,\n        doVideoOffer,\n        doVideoAnswer,\n        leaveRoom,\n        GetRoomMetaData\n    } = props\n\n    const dispatch = useDispatch();\n\n    const fetchMyDataCall = useCallback(\n        () => dispatch(fetchMyData),\n        [dispatch, fetchMyData]\n    );\n\n    useEffect(() => {\n        GetRoomMetaData(props.match.params.id)\n    }, [GetRoomMetaData, props.match.params.id])\n\n    useEffect(() => {\n        fetchMyDataCall()\n    }, [fetchMyDataCall]);\n\n    const roomLoading = useSelector((state) => state.WebChatReducer.roomLoading)\n    const roomMetadata = useSelector((state) => state.WebChatReducer.room)\n    const chatStep = useSelector((state) => state.WebChatReducer.chatStep)\n    const videoStep = useSelector((state) => state.WebChatReducer.videoStep)\n    const me = useSelector((state) => state.MeReducer.Me)\n\n    const query = messagesRef\n        .where(\"room\", \"==\", Object.keys(roomMetadata).length >= 1 && roomMetadata.id)\n        .orderBy(\"createdAt\")\n        .limitToLast(24)\n\n    const [snapshot, loading, error] = useCollectionData(query, { idField: 'id' });\n\n    const goToAudioRoomCall = useCallback(\n        () => dispatch(goToAudioRoom),\n        [dispatch, goToAudioRoom]\n    );\n\n    const goToChatRoomCall = useCallback(\n        () => dispatch(goToChatRoom),\n        [dispatch, goToChatRoom]\n    );\n\n    const goToVideoRoomCall = useCallback(\n        () => dispatch(goToVideoRoom),\n        [dispatch, goToVideoRoom]\n    );\n\n    const handleChatStep = () => {\n        switch (chatStep) {\n            case 1:\n                return roomLoading ? <h1>Loading ...</h1> :\n                    <ChatScreen\n                        gradientMessage\n                        roomMetadata={roomMetadata}\n                        SendMessage={SendMessage}\n                        messages={snapshot}\n                        me={me}\n                        loading={loading}\n                    />;\n            case 2:\n                return roomLoading ? <h1>Loading ...</h1> :\n                    <AudioChat\n                        doVideoOffer={doVideoOffer}\n                        doCandidate={doCandidate}\n                        roomMetadata={roomMetadata}\n                        videoStep={videoStep}\n                        doAnswer={doVideoAnswer}\n                        me={me}\n                        leaveRoom={leaveRoom}\n                    />;\n            case 3:\n                return roomLoading ? <h1>Loading ...</h1> :\n                    <VideoChat\n                        doVideoOffer={doVideoOffer}\n                        doCandidate={doCandidate}\n                        roomMetadata={roomMetadata}\n                        videoStep={videoStep}\n                        doAnswer={doVideoAnswer}\n                        me={me}\n                        leaveRoom={leaveRoom}\n                    />;\n            default:\n                return <ChatScreen gradientMessage />;\n        }\n    }\n    return (\n        <Style.Wrapper as={BodyContainer}>\n            <Style.LeftContainer>\n                <div id=\"image\">\n                    <img alt=\"profil\" src={Jolie} />\n                </div>\n                <Input type=\"text\" name=\"name\" disabled value={me.name} icon=\"blackcontact\" placeholder=\"Full name\" />\n                <Input type=\"text\" disabled value='Developer' name=\"function\" icon=\"success\" placeholder=\"Developers\" />\n                <ChatButton onClick={() => goToChatRoomCall()} icon={chatStep === 1 ? 'chatWhite' : 'chat'} border={chatStep === 1 ? '#53A8CB' : '#000'} color={chatStep === 1 ? '#53A8CB' : 'fff'} text={chatStep === 1 ? '#fff' : '000'}>Chat</ChatButton>\n                <ChatButton onClick={() => goToAudioRoomCall()} icon={chatStep === 2 ? 'audioWhite' : 'audio'} border={chatStep === 2 ? '#53A8CB' : '#000'} color={chatStep === 2 ? '#53A8CB' : 'fff'} text={chatStep === 2 ? '#fff' : '000'}>Audio Call</ChatButton>\n                <ChatButton onClick={() => goToVideoRoomCall()} icon={chatStep === 3 ? 'videoWhite' : 'video'} border={chatStep === 3 ? '#53A8CB' : '#000'} color={chatStep === 3 ? '#53A8CB' : 'fff'} text={chatStep === 3 ? '#fff' : '000'}>Video Call</ChatButton>\n                <ChatButton icon=\"clear\" border=\"#000\" color=\"#fff\" text=\"#000\">Clear Chat</ChatButton>\n                <ChatButton icon=\"block\" border=\"#000\" color=\"#fff\" text=\"#000\">Block</ChatButton>\n            </Style.LeftContainer>\n            <Style.RightContainer backgroundColor={chatStep === 1}>\n                {handleChatStep()}\n            </Style.RightContainer>\n        </Style.Wrapper>\n    );\n};\n\nexport default connect(null,\n    {\n        goToAudioRoom,\n        goToChatRoom,\n        goToVideoRoom,\n        fetchMyData,\n        SendMessage,\n        doVideoOffer,\n        doCandidate,\n        doVideoAnswer,\n        GetRoomMetaData,\n        leaveRoom\n    })(WebChat);\n\n",["520","521"],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/WebChat/reducer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/helpers/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/ChatScreen/index.js",["522"],"import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport * as Style from './style';\nimport FooterButton from '../UI/FooterButton';\nimport ChatInput from '../UI/ChatInput';\nimport Quote from './Words';\nimport Jolie from '../../Illustration/Joli.png';\nimport Jhon from '../../Illustration/Martin.png';\nimport { getUserNameById } from '../../helpers'\n\nconst ChatScreen = (props) => {\n  const {\n    gradientMessage,\n    roomMetadata,\n    SendMessage,\n    messages,\n    loading,\n    me\n  } = props;\n\n  const [content, setContent] = useState('');\n  const [name, setName] = useState([])\n\n  const dummy = useRef();\n\n  const getMyName = useCallback(\n    (id) => {\n      getUserNameById(id).then(res => setName((name) => [...name, {\n        id,\n        name: res\n      }]))\n    }, []\n  );\n  // root app adding teamchat route..\n  useEffect(() => {\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }, [messages])\n\n\n  useEffect(() => {\n    roomMetadata.participants.map(e => getMyName(e))\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    SendMessage({ content, room: roomMetadata.id })\n    setContent('');\n  };\n\n  const handleChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  const date = new Date();\n\n  return (\n    <Style.RightSide>\n      <Style.CrossWrapper>\n        {!loading ? messages.map((e, index) => {\n          return e.userId === me.id ? <Quote\n            key={index}\n            sender\n            avatar={Jolie}\n            time={e.createdAt === null ? date : e.createdAt.toDate()}\n            name={me.name}\n            text={e.text}\n          /> :\n            <Quote\n              key={index}\n              avatar={Jhon}\n              gradientMessage={gradientMessage}\n              time={e.createdAt.toDate()}\n              name={name.map(x => e.userId === x.id && x.name)}\n              text={e.text}\n            />\n        }) : <h1>Loading</h1>}\n        <span ref={dummy}></span>\n      </Style.CrossWrapper>\n      <Style.Footer>\n        <ChatInput onChange={handleChange} type=\"text\" name=\"chat\" placeholder=\"Type here…\" value={content} />\n        <FooterButton onClick={handleSubmit}>Send</FooterButton>\n      </Style.Footer>\n    </Style.RightSide>\n  );\n};\n\nexport default React.memo(ChatScreen);\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/VideoChat/index.js",["523","524","525","526","527","528"],"import React, { useRef, useEffect, useState } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport * as Style from './style';\nimport { sendOfferCall, sendAnswerCall, } from '../../WebRTC'\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport MuteVideo from '../../Illustration/muteicon@3x.svg';\nimport CallVideo from '../../Illustration/receivevideocallicon.svg';\nimport ProfilButton from '../UI/ProfilButton';\nimport receivevideocallicon from '../../Illustration/receivevideocallicon.svg';\nimport silenticon from '../../Illustration/silenticon.svg';\nimport endreceiveaudiocallicons from '../../Illustration/volumeicon.svg';\nimport jhon from '../../Illustration/Henry.png'\nimport 'webrtc-adapter'\nimport { formatTime } from '../../helpers'\nimport firebase from 'firebase';\nimport useVideoRoom from '../../hooks/useVideoRoom'\nimport useTimer from '../../hooks/useTimer'\nimport useUserName from '../../hooks/useUserName'\n\nconst roomsRef = firestoreFirebase.collection('/rooms');\nconst usersRef = firestoreFirebase.collection('/users');\n\nconst VideoChat = (props) => {\n\n  const {\n    doVideoOffer,\n    doCandidate,\n    roomMetadata,\n    videoStep,\n    doAnswer,\n    me,\n    leaveRoom,\n  } = props;\n\n  const remoteVideoRef = useRef(null);\n  const { timer, handleStart, handleReset } = useTimer();\n  const [mute, setMute] = useState(false);\n  const [displayVideo, setDisplayVideo] = useState(true);\n  const [localconnection, localstream, localVideoRef] = useVideoRoom(videoStep, true);\n  const [userName1] = useUserName(roomMetadata.participants.filter(e => e !== me.id)[0])\n\n  const [displayVideoScreen, setDisplayVideoScreen] = useState(false);\n\n  // Listening on Room with id === paricitpant.id\n  const RoomQuery = roomsRef\n    .where(firebase.firestore.FieldPath.documentId(), \"==\", roomMetadata.id);\n  const [snapshot1, loading1, error1] = useCollectionData(RoomQuery, { idField: 'id' });\n\n  // Listening on updating my candidate field.\n  const UserQuery = usersRef\n    .where(firebase.firestore.FieldPath.documentId(),\n      \"==\",\n      roomMetadata.participants.filter(e => e === me.id)[0]);\n  const [snapshot2, loading2, error2] = useCollectionData(UserQuery, { idField: 'id' });\n\n  console.log(timer)\n  // Caller Receive Answer.\n  useEffect(() => {\n    if (!loading1 && snapshot1[0].type === 'answer' && snapshot1[0].from !== me.id) {\n      async function StartingCall() {\n        const answer = JSON.parse(snapshot1[0].answer)\n        await localconnection.setRemoteDescription(answer);\n      }\n      StartingCall()\n    }\n  }, [loading1, snapshot1])\n\n  // Setting candidate Data after filling remoteDescription value.\n  useEffect(() => {\n    if (!loading2 &&\n      !loading1 &&\n      snapshot1[0].type === 'answer' &&\n      snapshot2[0].VideoRoom.type === 'candidate' &&\n      localconnection.remoteDescription !== null\n    ) {\n      // apply the new received candidate to the connection\n      async function addCandidateCall() {\n        const candidate = JSON.parse(snapshot2[0].VideoRoom.candidate)\n        await localconnection.addIceCandidate(new RTCIceCandidate(candidate))\n        setDisplayVideoScreen(true);\n        handleStart();\n      }\n      addCandidateCall()\n    }\n  }, [loading1, loading2, snapshot1, snapshot2]);\n\n  useEffect(() => {\n    if (!loading1 &&\n      snapshot1[0].type === 'leave'\n    ) {\n      leaveRoom(me.id,\n        roomMetadata.participants.filter(e => e !== me.id),\n        roomMetadata.id, localconnection, localstream, localVideoRef,\n        displayVideoScreen, setDisplayVideoScreen, handleReset)\n    }\n\n  }, [loading1, snapshot1]);\n\n  const renderCallComponent = () => {\n    return <div>\n      {!loading1 && snapshot1[0].type === 'offer' && snapshot1[0].from === me.id ?\n        <ProfilButton>Waiting {userName1} Response </ProfilButton> :\n        <ProfilButton onClick={() => sendOfferCall(localconnection,\n          localstream,\n          roomMetadata,\n          me,\n          remoteVideoRef,\n          doCandidate,\n          doVideoOffer)}>\n          Call {userName1}\n        </ProfilButton>\n      }\n    </div>\n  }\n\n  const renderAnswerComponent = () => {\n    return <div>\n      <ProfilButton onClick={() => sendAnswerCall(localconnection,\n        localstream,\n        roomMetadata,\n        snapshot1[0],\n        me,\n        remoteVideoRef,\n        doCandidate,\n        doAnswer\n      )}>Accept</ProfilButton>\n      <ProfilButton onClick={() => leaveRoom(me.id,\n        roomMetadata.participants.filter(e => e !== me.id),\n        roomMetadata.id, localconnection, localstream, localVideoRef,\n        displayVideoScreen, setDisplayVideoScreen, handleReset)} >Decline</ProfilButton>\n    </div>\n  }\n\n\n  const renderTwoVideoScreen = () => <div id=\"screenShare\"><video\n    className=\"videoInsert\"\n    muted={mute}\n    ref={remoteVideoRef}\n    autoPlay\n    playsInline>\n  </video>\n    <div id=\"top\">\n      <div><h1>{formatTime(timer)}</h1></div>\n      <video\n        className=\"video\" muted ref={localVideoRef} autoPlay playsInline>\n      </video>\n    </div>\n    <div id=\"bottom\">\n      {mute ? <img alt=\"silent\" onClick={() => setMute(!mute)} src={silenticon} /> :\n        <img alt=\"silent\" onClick={() => setMute(!mute)} src={endreceiveaudiocallicons} />\n      }\n      <ProfilButton\n        onClick={() => {\n          leaveRoom(me.id,\n            roomMetadata.participants.filter(e => e !== me.id),\n            roomMetadata.id, localconnection, localstream, localVideoRef,\n            displayVideoScreen, setDisplayVideoScreen, handleReset);\n\n        }}>End Call</ProfilButton>\n\n      {displayVideo ? <img onClick={() => console.log('video')}\n        alt=\"MuteVideo\"\n        src={CallVideo} /> :\n        <img\n          alt=\"silent\"\n          src={MuteVideo}\n        />\n      }\n    </div>\n  </div>\n\n\n  const handleVideoChat = () => {\n\n    return <>\n      <div id=\"requestStep\">\n        <img src={jhon} alt=\"profil\" id=\"profil\" />\n        <video id=\"profil\"\n          style={{ display: 'none' }}\n          muted ref={localVideoRef} autoPlay playsInline></video>\n        <video ref={remoteVideoRef}\n          style={{ display: 'none' }}\n          autoPlay\n          playsInline>\n        </video>\n        <img alt=\"img\" src={receivevideocallicon} />\n        {\n          loading1 ? <h2>loading1..</h2> :\n            (snapshot1[0].from === '' || snapshot1[0].from === me.id) ?\n              renderCallComponent() :\n              renderAnswerComponent()}\n      </div>\n      {renderTwoVideoScreen()}\n    </>\n\n\n  };\n\n  return (\n    <Style.Wrapper display={displayVideoScreen}>\n      {handleVideoChat()}\n    </Style.Wrapper>\n  );\n};\n\nexport default VideoChat;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/WebChat/action.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/VideoChat/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/WebRTC/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/VideoChat/Screen.js",["529","530"],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/usePrevious.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useVideoRoom.js",["531"],"import { useEffect, useState, useRef } from 'react';\nimport {\n    initiateConnection,\n    initiateLocalStream,\n} from '../WebRTC'\n\nconst useVideoRoom = (videoStep, video) => {\n    const [localconnection, setLocalConnection] = useState();\n    const [localstream, setLocalStrean] = useState();\n    let localVideoRef = useRef(null);\n\n    useEffect(() => {\n        async function LocalStream() {\n            const localStream = await initiateLocalStream(video);\n            localVideoRef.current.srcObject = localStream;\n            setLocalStrean(localStream)\n        }\n        async function localConnection() {\n            const localConnection = await initiateConnection();\n            setLocalConnection(localConnection)\n        }\n        localConnection();\n        LocalStream();\n\n    }, [videoStep]);\n\n    return [localconnection, localstream, localVideoRef]\n}\n\nexport default useVideoRoom;","/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useTimer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Contact/index.js",["532","533"],"import React, { useEffect, useCallback } from 'react';\nimport firebase from 'firebase';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport * as Style from './style';\nimport BodyContainer from '../../Common/Body';\nimport DumbContactComponent from '../../Components/Contact';\nimport SearchInput from '../../Components/UI/SearchInput';\nimport SortInput from '../../Components/UI/SortInput';\nimport {\n  sendNotificationToContact,\n  showNotificationModel,\n  showInvitationModel,\n  CancelSendRequest,\n  AccepteSentRequest,\n  generateSecurityCode,\n  showConfirmationCode,\n  showGeneratingCodeModel,\n  requestSucceed,\n  GoToPrivateRoom\n} from '../../store/Contact/action';\nimport {\n  checkMyNotification, fetchMyData, getMyAcceptedRequest, getMyConfirmationRequest,\n} from '../../store/Me/action';\n\nconst userRef = firestoreFirebase.collection('/users');\n\nconst Contact = (props) => {\n  const {\n    fetchMyData,\n    sendNotificationToContact,\n    checkMyNotification,\n    showNotificationModel,\n    showInvitationModel,\n    CancelSendRequest,\n    AccepteSentRequest,\n    generateSecurityCode,\n    getMyAcceptedRequest,\n    showGeneratingCodeModel,\n    getMyConfirmationRequest,\n    showConfirmationCode,\n    requestSucceed,\n    GoToPrivateRoom\n  } = props;\n\n  const dispatch = useDispatch()\n  const sentNotificationStep = useSelector((state) => state.ContactReducer.sentNotificationStep);\n  const openNotificationModel = useSelector((state) => state.ContactReducer.openNotificationModel);\n  const me = useSelector((state) => state.MeReducer.Me);\n\n  const query = me.id && userRef\n    .where(firebase.firestore.FieldPath.documentId(),\n      \"==\",\n      me.id);\n\n  const [snapshot, loading, error] = useCollectionData(query, { idField: 'id' });\n\n  const query2 = me.id && userRef\n\n  const [AllUsers, loading2, error2] = useCollectionData(query2, { idField: 'id' });\n\n  const Loading = useSelector((state) => state.ContactReducer.Loading)\n  const MyNotification = (snapshot !== undefined && snapshot[0].notification) || [];\n  const confirmationCode = (snapshot !== undefined && snapshot[0].confirmationCode) || [];\n  const AcceptedRequest = (snapshot !== undefined && snapshot[0].acceptedRequest) || [];\n\n  const fetchMyDataCall = useCallback(\n    () => dispatch(fetchMyData),\n    [dispatch, fetchMyData]\n  );\n\n  const getMyAcceptedRequestCall = useCallback(\n    () => dispatch(getMyAcceptedRequest),\n    [dispatch, getMyAcceptedRequest]\n  );\n\n  const getMyConfirmationRequestCall = useCallback(\n    () => dispatch(getMyConfirmationRequest),\n    [dispatch, getMyConfirmationRequest]\n  );\n\n  const checkMyNotificationCall = useCallback(\n    () => dispatch(checkMyNotification),\n    [checkMyNotification, dispatch]\n  );\n\n  useEffect(() => {\n    fetchMyDataCall();\n  }, [fetchMyDataCall]);\n\n  useEffect(() => {\n    getMyAcceptedRequestCall()\n  }, [getMyAcceptedRequestCall]);\n\n  useEffect(() => {\n    getMyConfirmationRequestCall()\n  }, [getMyConfirmationRequestCall]);\n\n  useEffect(() => {\n    checkMyNotificationCall();\n  }, [checkMyNotificationCall]);\n\n  return (\n    <Style.Wrapper as={BodyContainer}>\n      <Style.SearchBar>\n        <SearchInput placeholder=\"Search\" name=\"Search\" iconSearch />\n        <SortInput width=\"150px\" height=\"40px\" />\n      </Style.SearchBar>\n      {Loading && loading && loading2\n        ? <h1>Loading ....</h1>\n        : (\n          <DumbContactComponent\n            ContactData={AllUsers || []}\n            MyNotification={MyNotification}\n            sendNotificationToContact={sendNotificationToContact}\n            sentNotificationStep={sentNotificationStep}\n            openNotificationModel={openNotificationModel}\n            showNotificationModel={showNotificationModel}\n            showInvitationModel={showInvitationModel}\n            CancelSendRequest={CancelSendRequest}\n            AccepteSentRequest={AccepteSentRequest}\n            generateSecurityCode={generateSecurityCode}\n            AcceptedRequest={AcceptedRequest}\n            confirmationCode={confirmationCode}\n            showConfirmationCode={showConfirmationCode}\n            showGeneratingCodeModel={showGeneratingCodeModel}\n            requestSucceed={requestSucceed}\n            GoToPrivateRoom={GoToPrivateRoom}\n            me={me}\n          />\n        )}\n    </Style.Wrapper>\n  );\n};\n\n\nexport default connect(null,\n  {\n    sendNotificationToContact,\n    checkMyNotification,\n    showNotificationModel,\n    showInvitationModel,\n    CancelSendRequest,\n    fetchMyData,\n    AccepteSentRequest,\n    generateSecurityCode,\n    getMyAcceptedRequest,\n    showGeneratingCodeModel,\n    showConfirmationCode,\n    getMyConfirmationRequest,\n    requestSucceed,\n    GoToPrivateRoom\n  })(Contact);\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/Card/index.js",["534"],"import React, { useCallback, useEffect, useState } from 'react';\nimport PinInput from 'react-pin-input';\nimport * as Style from './style';\nimport ChatIcon from '../../../Illustration/Chat.svg';\nimport AudioCall from '../../../Illustration/AudioCall.svg';\nimport More from '../../../Illustration/More.svg';\nimport Stroke from '../../../Illustration/Stroke.svg';\nimport OTPSucess from '../../../Illustration/SuccessOtp.svg';\nimport Joli from '../../../Illustration/Joli.png';\n\nconst Card = (props) => {\n  const {\n    picture,\n    friends,\n    name,\n    status,\n    index,\n    id,\n    showGeneratingCodeModel,\n    AccepteSentRequest,\n    me,\n    showNotificationModel,\n    sendNotificationToContact,\n    MyNotification,\n    sentNotificationStep,\n    openNotificationModel,\n    showInvitationModel,\n    CancelSendRequest,\n    generateSecurityCode,\n    AcceptedRequest,\n    confirmationCode,\n    showConfirmationCode,\n    requestSucceed,\n    GoToPrivateRoom,\n    PrivateChat,\n    PictureView\n  } = props;\n\n  const [code, setCode] = useState();\n\n  const checkNotificationType = useCallback(\n    () => {\n      if (AcceptedRequest.includes(id)) {\n        showGeneratingCodeModel(index);\n      } else if (MyNotification.includes(id)) {\n        showInvitationModel(index);\n      } else if (confirmationCode.filter((e) => {\n        setCode(e.code);\n        return e.Id === id;\n      }).length > 0) {\n        showConfirmationCode(index);\n      }\n    },\n    [AcceptedRequest, MyNotification,\n      confirmationCode, id, index,\n      showConfirmationCode, showGeneratingCodeModel,\n      showInvitationModel],\n  );\n\n  useEffect(() => {\n    checkNotificationType();\n  }, [checkNotificationType]);\n\n  useEffect(() => {\n    checkNotificationType();\n  }, [checkNotificationType]);\n\n  useEffect(() => {\n    checkNotificationType();\n  }, [checkNotificationType]);\n\n  const [pin, setPin] = useState('');\n  const [confirmPin, setConfirmPin] = useState('');\n  const cancleNotificationRequest = () => CancelSendRequest(id);\n  const accepteNotificationRequest = () => AccepteSentRequest(index, id);\n  const insertCodeForMyRequest = () => {\n    if (code === confirmPin[3]) {\n      return requestSucceed(id);\n    }\n  };\n\n  const OtpModelShow1 = () => <Style.OTPModalContainer>\n    <img alt=\"success\" src={OTPSucess} />\n    <span>Request Accepted</span>\n    <p>\n      Please generate password and share with\n        {name}\n      {' '}\n        enjoy Messenger services on ENJOEE\n      </p>\n    <PinInput\n      length={4}\n      secret\n      onChange={(value, i) => setPin((prev) => ({ ...prev, [i]: value }))}\n      type=\"numeric\"\n      inputMode=\"number\"\n      style={{ width: '275px', height: '40px' }}\n      inputStyle={{ borderRadius: '5px', borderColor: '#47525D', height: '100%' }}\n      inputFocusStyle={{ borderColor: 'blue' }}\n      autoSelect\n      regexCriteria={/^[ A-Za-z0-9_@./#&+-]*$/}\n    />\n    <Style.ButtonContainer>\n      <button className=\"otp\" onClick={() => generateSecurityCode(pin[3], id)}> Yes</button>\n    </Style.ButtonContainer>\n  </Style.OTPModalContainer>;\n\n  const OtpModelShow2 = () => (\n    <Style.OTPModalContainer>\n      <p>\n        Request accepted by\n        {name}\n        and generated password for you.\n      </p>\n      <p>enter password and enjoy messangr services on ENJOEE</p>\n      <span>\n        Password -\n        {code}\n      </span>\n      <PinInput\n        length={4}\n        secret\n        onChange={(value, i) => setConfirmPin((prev) => ({ ...prev, [i]: value }))}\n        type=\"numeric\"\n        inputMode=\"number\"\n        style={{ width: '275px', height: '40px' }}\n        inputStyle={{ borderRadius: '5px', borderColor: '#47525D', height: '100%' }}\n        inputFocusStyle={{ borderColor: 'blue' }}\n        onComplete={(value, i) => setConfirmPin((prev) => ({ ...prev, [i]: value }))}\n        autoSelect\n        regexCriteria={/^[ A-Za-z0-9_@./#&+-]*$/}\n      />\n      <Style.ButtonContainer>\n        <button className=\"otp\" onClick={() => insertCodeForMyRequest()}>Yes</button>\n      </Style.ButtonContainer>\n    </Style.OTPModalContainer>\n  );\n\n  const sendNotificationRequest = () => (\n    <Style.ModalContainer>\n      <p>{`Would you like send chat request to ${name}.`}</p>\n      <Style.ButtonContainer>\n        <button className=\"red\" onClick={() => cancleNotificationRequest(id)}>No</button>\n        <button className=\"green\" onClick={() => sendNotificationToContact(id)}>Yes</button>\n      </Style.ButtonContainer>\n    </Style.ModalContainer>\n  );\n\n  const receiveNotificationRequest = () => (\n    <Style.ModalContainer>\n      <p>{`${me.name} you received Chat request fron ${name}.`}</p>\n      <Style.ButtonContainer>\n        <button className=\"red\" onClick={() => cancleNotificationRequest(id)}>No</button>\n        <button className=\"green\" onClick={() => accepteNotificationRequest()}>Yes</button>\n      </Style.ButtonContainer>\n    </Style.ModalContainer>\n  );\n\n  const generateCodeForNotificationRequest = () => OtpModelShow1();\n\n  const HandleModelShow = () => {\n    switch (sentNotificationStep) {\n      case 1:\n        return sendNotificationRequest();\n      case 2:\n        return receiveNotificationRequest();\n      case 3:\n        return generateCodeForNotificationRequest();\n      case 4:\n        return OtpModelShow2();\n      default:\n        return null;\n    }\n  };\n\n  const renderCard = () => <Style.CardContainer>\n    {PictureView === \"everybody\" ? <img alt=\"profil\" className=\"profil\" src={picture} /> :\n      friends.includes(me.id) ? <img alt=\"profil\" className=\"profil\" src={Joli} /> : null\n    }\n    <Style.Description>\n      <Style.PersonalInfo>\n        <h1>{name}</h1>\n        <span>{status}</span>\n      </Style.PersonalInfo>\n      <Style.IconContainer>\n        <img alt=\"chat\" src={ChatIcon}\n          onClick={() => !PrivateChat ? GoToPrivateRoom(id) :\n            showNotificationModel(index)} />\n        <img alt=\"audio\" src={AudioCall}\n          onClick={() => !PrivateChat ? GoToPrivateRoom(id) :\n            showNotificationModel(index)} />\n        <img alt=\"stroke\" src={Stroke}\n          onClick={() => !PrivateChat ? GoToPrivateRoom(id) :\n            showNotificationModel(index)} />\n        <img alt=\"more\" src={More} />\n      </Style.IconContainer>\n    </Style.Description>\n  </Style.CardContainer>;\n\n  return (\n    <Style.Wrapper>\n      {renderCard()}\n      {index === openNotificationModel && HandleModelShow()}\n    </Style.Wrapper>\n  );\n};\nexport default React.memo(Card);\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Contact/Card/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/index.js",["535"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware, connectRouter, ConnectedRouter } from 'connected-react-router';\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reduxthunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport AuthProvider from './Provider/AuthProvider/authProvider';\nimport App from './App';\nimport Reducers from './store/Reducer';\nimport './App.css';\n\nconst history = createBrowserHistory();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(Reducers(history), composeEnhancers(\n  applyMiddleware(reduxthunk, routerMiddleware(history)),\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <App />\n        </ConnectedRouter>\n      </Provider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/App.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Reducer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Provider/AuthProvider/authProvider.js",["536","537"],"import React, { useState } from 'react';\nimport { authMethods } from '../../firebaseService/authmethodes';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [loginInput, setloginInput] = useState({ password: '' });\n  const [signUpInput, setsignUpInput] = useState({\n    email: '', password: '', name: '', gender: '',\n  });\n  const [user, setUser] = useState('');\n  const [authStep, setAuthStep] = useState(1);\n  const [otpCode, setOtpCode] = useState({ mobile: '', password: '' });\n  const [signupError, setSignupError] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const [token, setToken] = useState(null);\n  const [otpError, setOtpError] = useState('');\n  const [valuePhone, setValuePhone] = useState('');\n\n  const handleSignup = (SignupData, reCapa) => {\n    authMethods.saveUser(SignupData, reCapa, authStep, setAuthStep, setSignupError, valuePhone);\n  };\n\n  const handleLogin = (reCapa) => {\n    authMethods.login(valuePhone, loginInput.password, reCapa, authStep, setAuthStep, setLoginError);\n  };\n  const handleOTPcode = () => {\n    authMethods.handleOTPCheck(otpCode.mobile, setUser, setToken, authStep, setAuthStep, otpCode.password, loginInput.password, signUpInput.password, setOtpError);\n  };\n  return (\n    <firebaseAuth.Provider\n      value={{\n        setValuePhone,\n        valuePhone,\n        otpError,\n        setOtpError,\n        loginError,\n        signupError,\n        authStep,\n        signUpInput,\n        setsignUpInput,\n        handleSignup,\n        loginInput,\n        setloginInput,\n        handleLogin,\n        otpCode,\n        setOtpCode,\n        handleOTPcode,\n        setLoginError,\n        setSignupError,\n\n      }}\n    >\n      {props.children}\n\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/GroupChat/reducer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/LandingRoute.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/TeamChat/reducer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Me/reducer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Contact/reducer.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/PrivateRoute.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/firebaseService/authmethodes.js",["538"],"import firebase from 'firebase';\nimport { firestoreFirebase, firebaseStorage } from './FirebaseIndex';\n\nconst usersRef = firestoreFirebase.collection('/users');\n\nexport const authMethods = {\n\n  login: async (phoneNumber, password, appVerifier, authStep, setAuthStep, setLoginError) => {\n    const snapshot = await usersRef.get();\n    const AllusersPhoneNumber = snapshot.docs.map((doc) => doc.data().mobile);\n    if (AllusersPhoneNumber.includes(phoneNumber)) {\n      const UserPassword = snapshot.docs.filter((doc) => doc.data().mobile === phoneNumber);\n      (UserPassword[0].data().password === password\n        ? firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n          .then((confirmationResult) => {\n            setAuthStep(authStep + 1);\n            // SMS sent. Prompt user to type the code from the message, then sign the\n            // user in with confirmationResult.confirm(code).\n            window.confirmationResult = confirmationResult;\n          }).catch((error) => {\n            console.log(error);\n\n            // Error; SMS not sent\n            // ...\n          })\n        : setLoginError(' Password Incorrect'));\n    } else {\n      setLoginError('Incorect Phone Number');\n    }\n  },\n\n  handleOTPCheck: async (OTPcode, setUser, setToken, authStep, setAuthStep, otpPassword, loginPassword, signupPassord, setOtpError) => {\n    if (signupPassord === otpPassword && signupPassord !== '') {\n      window.confirmationResult.confirm(OTPcode)\n        .then(async (res) => {\n          const token = await Object.entries(res.user)[5][1].b;\n          setUser(res.user);\n          // set token to localStorage\n          await localStorage.setItem('token', token);\n          // grab token from local storage and set to state.\n          setToken(window.localStorage.token);\n          setAuthStep(authStep + 1);\n        })\n        .catch((err) => setOtpError(err.message));\n    } else if (loginPassword === otpPassword && loginPassword !== '') {\n      window.confirmationResult.confirm(OTPcode)\n        .then(async (res) => {\n          const token = await Object.entries(res.user)[5][1].b;\n          setUser(res.user);\n          // set token to localStorage\n          await localStorage.setItem('token', token);\n          // grab token from local storage and set to state.\n          setToken(window.localStorage.token);\n          setAuthStep(authStep + 1);\n        })\n        .catch((err) => setOtpError(err.message));\n    } else {\n      setOtpError('Password Incorect');\n    }\n  },\n\n  saveUser: async (data, appVerifier, authStep, setAuthStep, setSignupError, valuePhone) => {\n    const snapshot = await usersRef.get();\n    const Allusers = snapshot.docs.map((doc) => doc.data().mobile);\n    if (!Allusers.includes(valuePhone)) {\n      firebase.auth().signInWithPhoneNumber(valuePhone, appVerifier)\n        .then(async (confirmationResult) => {\n          await usersRef.add({\n            email: data.email,\n            name: data.name,\n            gender: data.gender,\n            mobile: valuePhone,\n            password: data.password,\n            PictureView: true,\n            profilView: true,\n            privateChat: true,\n            status: \"Life is Good\"\n          });\n          setAuthStep(authStep + 1);\n          // SMS sent. Prompt user to type the code from the message, then sign the\n          // user in with confirmationResult.confirm(code).\n          window.confirmationResult = confirmationResult;\n        }).catch((error) => {\n          setSignupError(error.message);\n          // Error; SMS not sent\n          // ...\n        });\n    } else {\n      setSignupError('Phone Number Already Exist');\n    }\n  },\n\n  signout: (setErrors, setToken) => {\n    // signOut is a no argument function\n    firebase.auth().signOut().then((res) => {\n      // remove the token\n      localStorage.removeItem('token');\n      // set the token back to original state\n      setToken(null);\n    })\n      .catch((err) => {\n        console.log(err);\n        // there shouldn't every be an error from firebase but just in case\n        setErrors((prev) => ([...prev, err.message]));\n        // whether firebase does the trick or not i want my user to do there thing.\n        localStorage.removeItem('token');\n        setToken(null);\n        console.error(err.message);\n      });\n  },\n\n  forgotPass: (email) => {\n    firebase.auth().sendPasswordResetEmail(email);\n  },\n};\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/History/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Landing/index.js",["539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Style from './styles';\nimport Laptop from '../../Illustration/Screenshot.svg';\nimport Device from './Device';\nimport Pic1 from '../../Illustration/LandingPage/chat.svg';\nimport Pic2 from '../../Illustration/LandingPage/groupchat.svg';\nimport Pic3 from '../../Illustration/LandingPage/temporarychat.svg';\nimport Pic4 from '../../Illustration/LandingPage/videocall.svg';\nimport Pic5 from '../../Illustration/LandingPage/audiocall.svg';\nimport Logo from '../../Illustration/hichatylogo.svg';\nimport videocall from '../../Illustration/LandingPage/VideoCall.svg';\nimport AudioGroup from '../../Illustration/LandingPage/AudioCall.svg';\nimport ChatScreen from '../../Illustration/LandingPage/ChatScreen.svg';\nimport GroupAudioCall from '../../Illustration/LandingPage/GroupAudioCall.svg';\nimport GroupChatScreen from '../../Illustration/LandingPage/GroupChatScreen.svg';\nimport TemChatScreen from '../../Illustration/LandingPage/TemporaryChat.svg';\n\nconst Landing = () => {\n  const history = useHistory();\n  const [Pic, setPic] = useState(0);\n  const handleSubmit = () => {\n    history.push('/signup');\n  };\n\n  const renderingPicture = () => {\n    switch (Pic) {\n      case 0: return <img className=\"phone\" src={ChatScreen} />;\n      case 1: return <img className=\"phone\" src={GroupChatScreen} />;\n      case 2: return <img className=\"phone\" src={TemChatScreen} />;\n      case 3: return <img className=\"phone\" src={AudioGroup} />;\n      case 4: return <img className=\"phone\" src={GroupAudioCall} />;\n      case 5: return <img className=\"phone\" src={videocall} />;\n      default: return <img className=\"phone\" src={ChatScreen} />;\n    }\n  };\n  return (\n    <Style.Wrapper>\n      <h1>Let’s connect with HiChaty Messanger</h1>\n      <span>Secure and Easier to Use </span>\n      <p>Provide you to more Connectivity with Friends, Family and Business Via Chat & Calls.</p>\n      <img src={Laptop} />\n      <h2>DOWNLOAD ON YOUR DEVICE</h2>\n      <div id=\"device\">\n        <Device\n          text=\"Download HiChaty Messanger\n                   on your iPhone and Stay connect\n                     with Friends, Family and Business\"\n          type=\"IOS\"\n        />\n        <Device\n          text=\"Download HiChaty Messanger\n                      on your Android and Stay connect\n                    with Friends, Family and Business\"\n          type=\"ANDROID\"\n        />\n      </div>\n      <h3>FEATURES</h3>\n      <div style={{ backgroundColor: '#53A8CB' }}>\n        <div id=\"feature\">\n          <div id=\"leftSide\">\n            <div onClick={() => setPic(0)}>\n              <img src={Pic1} />\n              <h4>Chat</h4>\n            </div>\n            <div onClick={() => setPic(1)}>\n              <img src={Pic2} />\n              <h4>Group Chat</h4>\n            </div>\n            <div onClick={() => setPic(2)}>\n              <img src={Pic3} />\n              <h4>Temporary Chat</h4>\n            </div>\n          </div>\n\n          <div id=\"bar\" />\n          {renderingPicture()}\n          <div id=\"rightSide\">\n            <div onClick={() => setPic(3)}>\n              <img src={Pic5} />\n              <h4>Audio Call</h4>\n            </div>\n            <div onClick={() => setPic(4)}>\n              <img src={Pic2} />\n              <h4>Group A.Call</h4>\n            </div>\n            <div onClick={() => setPic(5)}>\n              <img src={Pic4} />\n              <h4>Video Call</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n      <img id=\"logo\" src={Logo} />\n      <p id=\"footerP\">\n        Let’s Join HiChaty Messanger\n        fun Chat with Friends and Family\n      </p>\n\n      <button onClick={handleSubmit}>Register Here!</button>\n\n    </Style.Wrapper>\n  );\n};\nexport default Landing;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Login/index.js",["554"],"import React, { useContext, useEffect } from 'react';\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport * as Style from './style';\nimport Logo from '../../Illustration/hichatylogo.svg';\nimport AuthInput from '../UI/AuthInput';\nimport FooterButton from '../UI/FooterButton';\nimport { firebaseAuth } from '../../Provider/AuthProvider/authProvider';\nimport OTP from '../OTP';\nimport Share from '../Share';\n\nconst Login = () => {\n  const {\n    handleLogin,\n    loginError,\n    loginInput,\n    setloginInput,\n    authStep,\n    setLoginError,\n    setValuePhone,\n    valuePhone,\n  } = useContext(firebaseAuth);\n  const appVerifier = window.recaptchaVerifier;\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await handleLogin(appVerifier);\n  };\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setLoginError('');\n    setloginInput((prev) => ({ ...prev, [name]: value }));\n  };\n\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      size: 'normal',\n      callback() {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // ...\n      },\n    });\n  }, []);\n\n  const renderAuth = () => {\n    switch (authStep) {\n      case 1:\n        return (\n          <Style.AuthWrapper>\n            <Style.LeftContainer>\n              <img src={Logo} />\n            </Style.LeftContainer>\n            <Style.Formcontainer>\n              <div id=\"container\">\n                <h1>LOGIN</h1>\n                <form onSubmit={handleSubmit}>\n                  {/* <Style.Choice>\n                                    <div>\n                                        <div id=\"checkbox\">\n                                            <div />\n                                        </div>\n                                        <span>Personal</span>\n                                    </div>\n                                    <div>\n                                        <div id=\"checkbox\">\n                                            <div />\n                                        </div>\n                                        <span>Corporate</span>\n                                    </div>\n                                </Style.Choice> */}\n                  <PhoneInput\n                    id=\"phone\"\n                    required\n                    name=\"mobile\"\n                    placeholder=\"Mobile Number\"\n                    value={valuePhone}\n                    onChange={setValuePhone}\n                  />\n                  <AuthInput icon=\"lock\" type=\"password\" required placeholder=\"Password\" onChange={handleChange} name=\"password\" value={loginInput.password} />\n                  <div id=\"recaptcha-container\" />\n                  <FooterButton>Login</FooterButton>\n                  <div>\n                    <Link to=\"/signup\">Register here!</Link>\n                    <Link id=\"forgot\" to=\"/forget\">Forgot password</Link>\n                  </div>\n                  {loginError ? <p style={{ textAlign: 'center', color: 'red' }}>{loginError}</p> : null}\n                </form>\n              </div>\n            </Style.Formcontainer>\n\n          </Style.AuthWrapper>\n        );\n\n      case 2:\n        return <OTP />;\n      case 3:\n        return <Share />;\n      default: return null;\n    }\n  };\n\n  return renderAuth();\n};\n\nexport default Login;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Signup/index.js",["555"],"import React, { useContext, useEffect } from 'react';\nimport firebase from 'firebase';\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\nimport { Link } from 'react-router-dom';\nimport * as Style from './style';\nimport { firebaseAuth } from '../../Provider/AuthProvider/authProvider';\nimport Logo from '../../Illustration/hichatylogo.svg';\nimport AuthInput from '../UI/AuthInput';\nimport FooterButton from '../UI/FooterButton';\nimport OTP from '../OTP';\nimport Share from '../Share';\n\nconst Signup = () => {\n  const {\n    handleSignup,\n    authStep,\n    setSignupError,\n    signUpInput,\n    setsignUpInput,\n    signupError,\n    setValuePhone,\n    valuePhone,\n  } = useContext(firebaseAuth);\n  const appVerifier = window.recaptchaVerifier;\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await handleSignup(signUpInput, appVerifier);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setSignupError('');\n    setsignUpInput((prev) => ({ ...prev, [name]: value }));\n  };\n\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      size: 'normal',\n      callback() {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // ...\n      },\n    });\n  }, []);\n  const renderAuth = () => {\n    switch (authStep) {\n      case 1:\n        return (\n          <Style.SignupWrapper>\n            <Style.LeftContainer>\n              <img src={Logo} />\n            </Style.LeftContainer>\n            <Style.Formcontainer>\n              <div id=\"container\">\n                <h1>REGISTER</h1>\n                <form onSubmit={handleSubmit}>\n                  <AuthInput required type=\"text\" onChange={handleChange} name=\"name\" value={signUpInput.name} icon=\"contact\" placeholder=\"Full name\" />\n                  <AuthInput required type=\"text\" onChange={handleChange} name=\"email\" value={signUpInput.email} icon=\"message\" placeholder=\"Email address\" />\n                  <AuthInput required type=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\" onChange={handleChange} name=\"password\" value={signUpInput.password} icon=\"lock\" placeholder=\"Password\" />\n                  <AuthInput required type=\"text\" onChange={handleChange} name=\"gender\" value={signUpInput.gender} icon=\"gender\" placeholder=\"Gender\" />\n                  <PhoneInput\n                    id=\"phone\"\n                    name=\"mobile\"\n                    placeholder=\"Mobile Number\"\n                    value={valuePhone}\n                    onChange={setValuePhone}\n                  />\n                  <div id=\"recaptcha-container\" />\n                  <FooterButton onSubmi={handleSubmit}>Register</FooterButton>\n                  <Link to=\"/login\">Login here!</Link>\n                </form>\n                {signupError ? <p style={{ textAlign: 'center', color: 'red' }}>{signupError}</p> : null}\n              </div>\n            </Style.Formcontainer>\n\n          </Style.SignupWrapper>\n        );\n\n      case 2:\n        return <OTP />;\n      case 3:\n        return <Share />;\n      default: return null;\n    }\n  };\n\n  return renderAuth();\n};\n\nexport default Signup;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/firebaseService/FirebaseIndex.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/TeamChat/action.js",["556","557"],"import {\n  CONFIRMATION_STEP, OPEN_MODEL,\n  GO_TO_LAST_STEP, GO_TO_SECOND_STEP,\n  GO_TO_FIRST_STEP, FINISH_STEP,\n  CLOSE_MODEL\n} from './actionType';\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport { push } from 'connected-react-router';\nimport firebase from 'firebase';\nimport { getMeByPhone } from '../../helpers'\n\n\nconst userRef = firestoreFirebase.collection('/users');\nconst roomsRef = firestoreFirebase.collection('/rooms');\n\nexport const next = (id, time) => async (dispatch) => {\n\n  dispatch({\n    type: GO_TO_SECOND_STEP,\n    payload: {\n      id, time: time.value\n    }\n  });\n}\n\nexport const NextCode = (id, code, setOpen) => async (dispatch, getState) => {\n  const DataStepOne = getState().TeamChatReducer.DataStepOne;\n  const me = await getMeByPhone();\n  let teamChatNotification = [];\n\n  await userRef\n    .doc(id)\n    .get()\n    .then(async querySnapshot => {\n      teamChatNotification = await querySnapshot.data().teamChatNotification.filter((chat) => {\n        return chat.id !== me[0].id;\n      })\n    })\n    .then(async () => {\n      await userRef\n        .doc(id)\n        .update({\n          teamChatNotification: [...teamChatNotification, {\n            codeConfirmation: code,\n            id: me[0].id,\n            duration: DataStepOne.time\n          }]\n        })\n    })\n    .then(() => {\n      setOpen(false)\n      dispatch({\n        type: GO_TO_LAST_STEP,\n      });\n    })\n}\n\nexport const AddContactToTeamChat = (contactId, duration, codeConfirmation, setOpen) => async (dispatch) => {\n  const me = await getMeByPhone();\n\n  await userRef\n    .doc(me[0].id)\n    .update({\n      teamChatNotification: firebase.firestore.FieldValue.arrayRemove({\n        id: contactId,\n        duration,\n        codeConfirmation\n      })\n    }).then(async () => {\n      await userRef\n        .doc(contactId)\n        .update({\n          teamChatContact: firebase.firestore.FieldValue.arrayUnion({\n            contactId: me[0].id,\n            duration\n          })\n        })\n        .then(async doc => {\n          await userRef\n            .doc(me[0].id)\n            .update({\n              teamChatContact: firebase.firestore.FieldValue.arrayUnion({\n                contactId,\n                duration\n              })\n            })\n        }).then(() => {\n          setOpen(false)\n          dispatch({\n            type: FINISH_STEP,\n          });\n        })\n\n    })\n}\n\nexport const ConfirmationModel = () => async (dispatch) => {\n\n  dispatch({\n    type: CONFIRMATION_STEP,\n  });\n\n\n}\n\nexport const goToFirstStep = () => async (dispatch) => {\n  dispatch({\n    type: GO_TO_FIRST_STEP,\n  });\n\n};\n\n\n\nexport const ChangeChatDuration = (newDuration, contactId) => async () => {\n  const me = await getMeByPhone();\n  let teamChatContactForMe = [];\n\n  await userRef\n    .doc(me[0].id)\n    .get()\n    .then(async querySnapshot => {\n      teamChatContactForMe = await querySnapshot.data().teamChatNotification.filter((chat) => {\n        return chat.id !== contactId;\n      })\n    })\n    .then(async () => {\n      await userRef\n        .doc(me[0].id)\n        .update({\n          teamChatContact: [...teamChatContactForMe, {\n            contactId: contactId,\n            duration: newDuration\n          }]\n        })\n    })\n\n};\n\n\nexport const GoToPrivateRoom = (id) => async (dispatch) => {\n  const me = await getMeByPhone();\n  let room = {};\n  await roomsRef.where('participants', 'array-contains', me[0].id)\n    .get()\n    .then((querySnapshot) => {\n      return querySnapshot.forEach((doc) => {\n        if (doc.data().participants.every(elem => [me[0].id, id].indexOf(elem) > -1)) {\n          room = ({ id: doc.id, ...doc.data() })\n        }\n      });\n    })\n\n  dispatch(push({\n    pathname: `/webChat/team/${room.id}`\n  }));\n\n};\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/History/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/GroupChat/action.js",["558","559","560","561","562","563"],"import { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport firebase from 'firebase';\nimport { push } from 'connected-react-router';\nimport {\n  ADD_GROUP_ACTION,\n  BACK_TO_CONTACT,\n  SELECT_GROUP_PERSON,\n  REMOVE_GROUP_PERSON,\n  ADD_GROUP_BY_NAME,\n  GET_GROUP_BY_ID,\n  GET_ALL_GROUPS,\n  GROUP_ERROR,\n  GO_TO_GROUP_DETAIL,\n  SHOW_ALL_GROUP,\n  ADD_MEMBERS,\n  UPDATE_MEMBER,\n  GO_TO_PRIVATE_ROOM\n} from './actionType';\nimport { getMeByPhone } from '../../helpers'\n\nconst userRef = firestoreFirebase.collection('/users');\nconst roomsRef = firestoreFirebase.collection('/rooms');\n\nexport const showAllGroup = () => async (dispatch) => {\n  dispatch({\n    type: SHOW_ALL_GROUP\n  })\n};\n\nexport const goToPrivateRoom = (id) => async (dispatch) => {\n  let room = {};\n\n  await roomsRef\n    .where(firebase.firestore.FieldPath.documentId(), \"==\", id)\n    .get()\n    .then((querySnapshot) => {\n      return querySnapshot.forEach((doc) => room = ({ id: doc.id, ...doc.data() }));\n    })\n  dispatch(push({\n    pathname: `/webChat/group/${room.id}`\n  }));\n}\n\nexport const updateMember = (id) => async (dispatch, getState) => {\n  const members = getState().GroupChatReducer.GroupPerson;\n  let ExistingMembers = [];\n\n  await roomsRef\n    .where(firebase.firestore.FieldPath.documentId(), '==', id)\n    .get()\n    .then((querySnapshot) => {\n      return querySnapshot.forEach((doc) => {\n        ExistingMembers = [...doc.data().participants]\n      });\n    })\n\n  const NewMembers = members.filter(e => !ExistingMembers.includes(e))\n\n  await roomsRef.doc(id).update({\n    participants: [...ExistingMembers, ...NewMembers],\n  }).then(async doc => {\n    await NewMembers.every(async e => await userRef.doc(e).update({\n      groups: firebase.firestore.FieldValue.arrayUnion(`/rooms/${id}`)\n    }))\n    dispatch(push({\n      pathname: `/groups/${id}`\n    }));\n  })\n\n\n};\n\nexport const AddMember = (id) => async (dispatch) => {\n\n  dispatch(push({\n    pathname: `/update/group/${id}`\n  }));\n\n};\n\nexport const addGroupAction = () => async (dispatch) => {\n  dispatch(push({\n    pathname: `/groups/contact`\n  }));\n};\n\nexport const goToGroupDetail = (id) => async (dispatch) => {\n\n  dispatch(push({\n    pathname: `/groups/${id}`\n  }));\n\n};\n\nexport const getGroupById = (id) => async (dispatch) => {\n  let groupMetadata = {}\n\n  await roomsRef\n    .where(firebase.firestore.FieldPath.documentId(), '==', id)\n    .get()\n    .then((querySnapshot) => {\n      return querySnapshot.forEach((doc) => {\n        groupMetadata = ({ id: doc.id, ...doc.data() })\n      });\n    })\n\n  dispatch({\n    type: GET_GROUP_BY_ID,\n    payload: groupMetadata\n  });\n};\n\nexport const addNewGroup = (name) => async (dispatch, getState) => {\n  const me = await getMeByPhone();\n  const members = [...getState().GroupChatReducer.GroupPerson, me[0].id];\n  const allGroups = getState().GroupChatReducer.allGroups;\n  const VerifyName = allGroups.filter(group => {\n    return group.name === name\n  });\n  const VerifyGroup = allGroups.filter(group => {\n    return group.participants.every((e) => members.includes(e)) &&\n      members.every((e) => group.participants.includes(e))\n  });\n\n  if (members.length < 2) {\n    dispatch({\n      type: GROUP_ERROR,\n      payload: \"Group member must be more than one !\"\n    });\n  } else {\n    if (VerifyName.length !== 0) {\n      dispatch({\n        type: GROUP_ERROR,\n        payload: \"Group name already Exist !\"\n      });\n    } else {\n      if (VerifyGroup.length !== 0) {\n        dispatch({\n          type: GROUP_ERROR,\n          payload: \"Group already exist with the same members !\"\n        });\n      } else {\n\n        await roomsRef.add({\n          participants: members,\n          name: name\n        })\n          .then(async doc => {\n            await members.every(async e => await userRef.doc(e).update({\n              groups: firebase.firestore.FieldValue.arrayUnion(`/rooms/${doc.id}`)\n            }))\n            dispatch(push({\n              pathname: `/groups/${doc.id}`\n            }));\n          })\n      }\n    }\n  }\n};\n\nexport const getAllGroups = () => async (dispatch) => {\n  const me = await getMeByPhone();\n  let data = [];\n  await userRef\n    .where(firebase.firestore.FieldPath.documentId(), \"==\", me[0].id)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n\n        doc.data().groups.length > 0 ?\n          doc.data().groups.every(async e => {\n            await firestoreFirebase.doc(e).get().then(function (doc) {\n              if (doc.exists) {\n                const id = doc.id;\n                data = [...data, { id, ...doc.data() }];\n              }\n            })\n              .then(() => {\n                dispatch({\n                  type: GET_ALL_GROUPS,\n                  payload: data,\n                })\n              })\n          })\n          :\n          dispatch({\n            type: GET_ALL_GROUPS,\n            payload: data,\n          })\n      })\n    })\n\n};\n\n\nexport const selectGroupPerson = (PersonId) => async (dispatch) => {\n  dispatch({\n    type: SELECT_GROUP_PERSON,\n    payload: PersonId,\n  });\n};\n\nexport const removeGroupPerson = (PersonId) => async (dispatch, getState) => {\n  const GroupPersonState = getState().GroupChatReducer.GroupPerson;\n  const index = GroupPersonState.indexOf(PersonId);\n  dispatch({\n    type: REMOVE_GROUP_PERSON,\n    payload: index,\n  });\n};\n\nexport const backToContact = () => async (dispatch) => {\n  dispatch({\n    type: BACK_TO_CONTACT,\n  });\n};\n\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Landing/styles.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Login/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Landing/Device.js",["564"],"import React from 'react';\nimport DeviceButton from '../UI/DeviceButton';\nimport { DeviceContainer } from './styles';\nimport ApplePhone from '../../Illustration/LandingPage/ApplePhone.svg';\nimport AndroidPhone from '../../Illustration/LandingPage/AndroidDevice.svg';\n\nconst Device = ({ text, type }) => (\n  <DeviceContainer display={type !== 'IOS'}>\n    <img src={type === 'IOS' ? ApplePhone : AndroidPhone} />\n    <div id=\"container\">\n      <p>{text}</p>\n      {type === 'IOS'\n        ? (\n          <DeviceButton type=\"IOS\">\n            <div id=\"buttonContent\">\n              <span>Available on the</span>\n              <p className=\"ButtonMark\">App Store</p>\n            </div>\n          </DeviceButton>\n        )\n        : (\n          <DeviceButton type=\"Android\">\n            <div id=\"buttonContent\">\n              <span>Get it On</span>\n              <p className=\"ButtonMark\">Google play</p>\n            </div>\n          </DeviceButton>\n        )}\n    </div>\n  </DeviceContainer>\n);\n\nexport default Device;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Data/ContactMockData.js",["565"],"import Joli from '../Illustration/Joli.png';\nimport Martin from '../Illustration/Martin.png';\nimport Jhon from '../Illustration/Jhon.png';\nimport Jonathan from '../Illustration/Jonathan.png';\nimport Henry from '../Illustration/Henry.png';\nimport Micky from '../Illustration/Micky.png';\nimport Sozoo from '../Illustration/Sozoo.png';\nimport TaraAlwyn from '../Illustration/TaraAlwyn.png';\nimport Hasi from '../Illustration/Hasi.png';\n\nexport default [{\n  id: 11,\n  picture: Jhon,\n  name: 'John William',\n  detail: 'Love is life & life',\n  profile: false,\n  history: {\n    call: '2:10',\n    video: '3:00',\n    message: '5:00',\n  },\n\n}, {\n  id: 22,\n  picture: TaraAlwyn,\n  name: 'Tara Alwyn',\n  detail: 'Work hard...',\n  profile: true,\n  history: {\n    call: '',\n    video: '3:00',\n    message: '',\n  },\n\n}, {\n  id: 33,\n  picture: Joli,\n  name: 'Jolie Price',\n  detail: 'Love is life & life is family',\n  profile: true,\n  history: {\n    call: '',\n    video: '3:00',\n    message: '5:00',\n  },\n\n}, {\n  id: 44,\n  picture: Jonathan,\n  name: 'Jonathan Carington',\n  detail: 'Work hard...',\n  profile: true,\n  history: {\n    call: '2:10',\n    video: '3:00',\n    message: '',\n  },\n\n},\n{\n  id: 55,\n  picture: Sozoo,\n  name: 'Sozoo Lee',\n  detail: 'Friendship is forever',\n  profile: true,\n  history: {\n    call: '2:10',\n    video: '3:00',\n    message: '5:00',\n  },\n\n}, {\n  id: 66,\n  picture: Martin,\n  name: 'Martin Hoo',\n  detail: 'Trust is bigger',\n  profile: true,\n\n}, {\n  id: 77,\n  picture: Micky,\n  name: 'Jonathan Carington',\n  detail: 'Work hard...',\n  profile: true,\n  history: {\n    call: '2:10',\n    video: '3:00',\n    message: '5:00',\n  },\n\n},\n{\n  id: 8,\n  picture: Henry,\n  name: 'Sozoo Lee',\n  detail: 'Friendship is forever',\n  profile: true,\n  history: {\n    call: '',\n    video: '3:00',\n    message: '5:00',\n  },\n\n}, {\n  id: 9,\n  picture: Hasi,\n  name: 'Martin Hoo',\n  detail: 'Trust is bigger',\n  profile: true,\n  history: {\n    call: '2:10',\n    video: '3:00',\n    message: '5:00',\n  },\n\n}];\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/SearchInput.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/AuthInput.js",["566","567","568","569","570","571","572"],"import React from 'react';\nimport { AuthInputContainer, AuthInput } from './style';\nimport contact from '../../Illustration/contact/contact/regular.svg';\nimport message from '../../Illustration/Emailoutline.svg';\nimport lock from '../../Illustration/Icon/Web/Action/Lock.svg';\nimport mobile from '../../Illustration/Icon/Web/Action/Mobile.svg';\nimport blackcontact from '../../Illustration/Icon/Regular/Mobile/blackContact.svg';\nimport gender from '../../Illustration/Icon/Web/Action/Gender.svg';\nimport Success from '../../Illustration/Success2.svg';\n\nconst AuthInputComponent = ({\n  placeholder, name, icon, type, ...props\n}) => {\n  const IconHandler = () => {\n    switch (icon) {\n      case 'message':\n        return <img src={message} />;\n      case 'lock':\n        return <img src={lock} />;\n      case 'mobile':\n        return <img src={mobile} />;\n      case 'gender':\n        return <img src={gender} />;\n      case 'contact':\n        return <img src={contact} />;\n      case 'blackcontact':\n        return <img src={blackcontact} />;\n      case 'success':\n        return <img src={Success} />;\n      default: return null;\n    }\n  };\n  return (\n    <AuthInputContainer>\n      <AuthInput\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        {...props}\n      />\n      <span>{IconHandler()}</span>\n    </AuthInputContainer>\n  );\n};\n\nexport default AuthInputComponent;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/FooterButton.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Common/Body.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/SortInput.js",["573","574"],"import React from 'react';\nimport Select, { components } from 'react-select'\nimport { SelectContainer } from './style';\nimport Polygon from '../../Illustration/Polygon.svg'\n\nconst SortInput = (props) => {\n\n\n    const customStyles = {\n        control: (base, state) => ({\n            ...base,\n            width: state.selectProps.width,\n            height: state.selectProps.height,\n            background: 'transparent',\n            paddingLeft: '2px',\n            // match with the menu\n            borderRadius: state.isFocused ? 5 : 5,\n            // Overwrittes the different states of border\n            borderColor: state.isFocused ? \"#47525D\" : \"#47525D\",\n            borderColor: state.isSelected ? \"#47525D\" : \"#47525D\",\n            // Removes weird border around container\n            boxShadow: 'none',\n\n            \"&:hover\": {\n                // Overwrittes the different states of border\n                border: state.isFocused ? ' 1px solid #53A8CB' : ' 1px solid  #47525D',\n                outline: state.isFocused ? 'none !important ' : 'auto'\n            },\n\n\n        }),\n        menu: base => ({\n            ...base,\n            // override border radius to match the box\n            borderRadius: 0,\n            // kill the gap\n            marginTop: 0\n        }),\n        menuList: base => ({\n            ...base,\n            // kill the white space on first and last option\n            padding: 0,\n            textAlign: \"left\"\n\n        }),\n        indicatorSeparator: (styles) => ({ display: 'none' }),\n        placeholder: () => ({ color: '#47525D', fontWeight: 400, fontSize: '14px' })\n    }\n\n\n    const DropdownIndicator = (\n        props: ElementConfig<typeof components.DropdownIndicator>\n    ) => {\n        return (\n            <components.DropdownIndicator {...props}>\n                <img src={Polygon} />\n            </components.DropdownIndicator>\n        );\n    };\n\n    return (\n        <SelectContainer>\n            <Select\n                components={{ DropdownIndicator }}\n                width={props.width}\n                height={props.height}\n                styles={customStyles}\n                options={props.options}\n                isMulti={false}\n                onChange={props.onChange}\n                value={props.value}\n                isSearchable={true}\n                placeholder=\"Sort by\"\n                {...props}\n            />\n        </SelectContainer>\n\n    )\n}\n\nexport default SortInput","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ProfilInput.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/LandingLayout/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ProfilSelector.js",["575"],"import React from 'react';\nimport Select, { components } from 'react-select'\nimport { SelectContainer } from './style'\nimport Polygon from '../../Illustration/Polygon.svg'\n\nconst ProfilSelector = (props) => {\n\n\n    const customStyles = {\n        control: (base, state) => ({\n            ...base,\n            width: state.selectProps.width,\n            height: state.selectProps.height,\n            background: 'transparent',\n            borderColor: state.isFocused ? \"#47525D\" : \"#47525D\",\n            borderColor: state.isSelected ? \"#47525D\" : \"#47525D\",\n            border: state.selectProps.border,\n            borderBottom: state.selectProps.borderBottom,\n            borderRadius: 0,\n            \"&:hover\": {\n                borderColor: state.isFocused ? \"#47525D\" : \"#47525D\",\n            },\n            fontFamily: \"Helvetica\",\n            fontStyle: \"normal\",\n            fontWeight: 400,\n            fontSize: \"22px\",\n            lineHeight: \"25px\",\n            letterSpacing: \"1.29412px\",\n            color: \"#4A4A4A\"\n        }),\n        menu: base => ({\n            ...base,\n            borderRadius: 0,\n            marginTop: 0\n        }),\n        menuList: base => ({\n            ...base,\n            padding: 0\n        }),\n        indicatorSeparator: () => ({ display: 'none' }),\n        placeholder: () => ({\n            fontFamily: \"Helvetica\",\n            fontStyle: \"normal\",\n            fontWeight: 400,\n            fontSize: \"22px\",\n            lineHeight: \"25px\",\n            letterSpacing: \"1.29412px\",\n            color: \"#4A4A4A\"\n        })\n    }\n\n    const DropdownIndicator = (\n        props: ElementConfig<typeof components.DropdownIndicator>\n    ) => {\n        return (\n            <components.DropdownIndicator {...props}>\n                <img style={{ width: \"16px\", height: \"10px\" }} alt=\"Polygon\" src={Polygon} />\n            </components.DropdownIndicator>\n        );\n    };\n\n    return <SelectContainer>\n        <p id=\"label\">{props.label}</p>\n        <Select\n            components={{ DropdownIndicator }}\n            border={props.border}\n            borderBottom={props.borderBottom}\n            width={props.width}\n            height={props.height}\n            styles={customStyles}\n            options={props.options}\n            isMulti={false}\n            onChange={props.onChange}\n            isSearchable={true}\n            placeholder={props.placeholder}\n            {...props}\n        />\n    </SelectContainer>;\n}\n\nexport default ProfilSelector;","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/ProfilFooter.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ProfilButton.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Me/action.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Signup/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/chatButton.js",["576","577","578","579","580","581","582","583","584"],"import React from 'react';\nimport * as Style from './style';\nimport video from '../../Illustration/Icon/Web/Regular/VideoCall.svg';\nimport chat from '../../Illustration/Icon/Web/Regular/Chat.svg';\nimport audio from '../../Illustration/Icon/Web/Regular/AudioCall.svg';\nimport block from '../../Illustration/Icon/Web/Action/Block.svg';\nimport clear from '../../Illustration/Icon/Web/Action/Clear.svg';\nimport audioWhite from '../../Illustration/Icon/Web/Regular/AudioWhite.svg';\nimport videoWhite from '../../Illustration/Icon/Web/Regular/VideoWhite.svg';\nimport chatWhite from '../../Illustration/Icon/Web/Regular/ChatWhite.svg';\n\nconst ChatButton = ({\n  color, icon, border, children, ...props\n}) => {\n  const IconHandler = () => {\n    switch (icon) {\n      case 'chat':\n        return <img className=\"Icon\" src={chat} />;\n      case 'audio':\n        return <img className=\"Icon\" src={audio} />;\n      case 'block':\n        return <img className=\"Icon\" src={block} />;\n      case 'clear':\n        return <img className=\"Icon\" src={clear} />;\n      case 'video':\n        return <img className=\"Icon\" src={video} />;\n      case 'audioWhite':\n        return <img className=\"Icon\" src={audioWhite} />;\n      case 'videoWhite':\n        return <img className=\"Icon\" src={videoWhite} />;\n      case 'chatWhite':\n        return <img className=\"Icon\" src={chatWhite} />;\n    }\n  };\n  return (\n\n    <Style.ChatButton textColor={props.text} color={color} borderColor={border} {...props}>\n      {IconHandler()}\n      {children}\n    </Style.ChatButton>\n\n  );\n};\n\nexport default ChatButton;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Contact/action.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/WebChat/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Contact/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/TeamChat/actionType.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/GroupChat/actionType.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Share/index.js",["585","586"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Style from './style';\nimport FooterButton from '../UI/FooterButton';\nimport share from '../../Illustration/handsicon.svg';\nimport Logo from '../../Illustration/hichatylogo.svg';\n\nconst Share = () => (\n  <Style.AuthWrapper>\n    <Style.LeftContainer>\n      <img src={Logo} />\n    </Style.LeftContainer>\n    <Style.Formcontainer>\n      <div>\n        <img src={share} />\n        <span>\n          We request you to all Enjoee users, share with your\n          friends and familyand make successfull of Enjoee\n          {' '}\n          <br />\n        </span>\n        <span>  Welcome to Enjoee Family</span>\n\n        <Style.ButtonContainer>\n          <FooterButton>Submit</FooterButton>\n          <Link id=\"cancel\" to=\"/contact\">Cancel</Link>\n        </Style.ButtonContainer>\n      </div>\n    </Style.Formcontainer>\n\n  </Style.AuthWrapper>\n);\n\nexport default Share;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/DeviceButton.js",["587","588"],"import styled from 'styled-components';\nimport React from 'react';\nimport Ios from '../../Illustration/IOSICON.svg';\nimport Android from '../../Illustration/LandingPage/GoogleIcon.svg';\n\nexport const DeviceButton = styled.div`\nposition:relative;\nwidth: 236px;\nheight: 80px;\nmargin:auto;\n\n#mark{\n  width: 100%;\n  height: 100%;\n  background: #000000;\n  border-radius: 9.6px;\n  font-family:Roboto;\n  font-size:16px;\n  font-weight:400;\n  color: #fff;\n  cursor: pointer;\n  margin:0;\n\n#buttonContent{\n    position:absolute;\n    left:60px;\n    top:10px;\n    width:200px;\n    height:100%;\n    text-align:left;\n}\n\n.ButtonMark{\n    color:#fff;\n    font-size:30px;\n    width:100%;\n    margin:0;\n    text-align:left;\n    font-family:Roboto;\n    font-weight:500;\n  }\n\nspan{\n    color:#fff;\n    width:100%;\n    display:inline-block;\n    font-size:20px;\n    font-family:Roboto;\n    font-weight:400;\n}\n\n}\n\n  #icon{\n   position:absolute;\n   margin:0;\n   top:15px;\n   left:12px;\n   width: 36.96px;\n   height: 45.3px;\n  }\n\n  `;\n\nconst DeviceButtonContainer = ({ type, children }) => (\n\n  <DeviceButton>\n    <button id=\"mark\">{children}</button>\n    {type === 'IOS' ? <img id=\"icon\" src={Ios} /> : <img id=\"icon\" src={Android} />}\n  </DeviceButton>\n\n);\n\nexport default DeviceButtonContainer;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Common/Layout.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/AboutUs.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/Condition.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Profil/Contact.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/OTP/index.js",["589"],"import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Style from './style';\nimport { firebaseAuth } from '../../Provider/AuthProvider/authProvider';\nimport AuthInput from '../UI/AuthInput';\nimport FooterButton from '../UI/FooterButton';\nimport Logo from '../../Illustration/hichatylogo.svg';\n\nconst OTP = () => {\n  const {\n    otpCode, setOtpCode, handleOTPcode, otpError, setOtpError,\n  } = useContext(firebaseAuth);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await handleOTPcode(otpCode.mobile);\n  };\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setOtpError('');\n    setOtpCode((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <Style.AuthWrapper>\n      <Style.LeftContainer>\n        <img src={Logo} />\n      </Style.LeftContainer>\n      <Style.Formcontainer>\n        <div id=\"container\">\n\n          <h1>OTP</h1>\n\n          <form onSubmit={handleSubmit}>\n            <AuthInput icon=\"mobile\" placeholder=\"Code\" onChange={handleChange} name=\"mobile\" value={otpCode.mobile} />\n            <AuthInput icon=\"lock\" placeholder=\"Password\" onChange={handleChange} name=\"password\" value={otpCode.password} />\n            <FooterButton>Submit</FooterButton>\n            {otpError ? <p style={{ textAlign: 'center', color: 'red' }}>{otpError}</p> : null}\n            <Link to=\"/signup\">Resend!</Link>\n          </form>\n        </div>\n      </Style.Formcontainer>\n    </Style.AuthWrapper>\n  );\n};\n\nexport default OTP;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Me/actionType.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/AudioChat/index.js",["590","591","592","593","594"],"import React, { useRef, useEffect, useState } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport * as Style from './style';\nimport { sendOfferCall, sendAnswerCall, } from '../../WebRTC'\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport ProfilButton from '../UI/ProfilButton';\nimport receiveaudiocallicon from '../../Illustration/receiveaudiocallicon.svg';\nimport silenticon from '../../Illustration/silenticon.svg';\nimport endreceiveaudiocallicons from '../../Illustration/volumeicon.svg';\nimport volumeicon from '../../Illustration/volumeicon.svg';\nimport muteicon from '../../Illustration/muteicon.svg'\nimport keypadicon from '../../Illustration/keypadicon.svg'\nimport jhon from '../../Illustration/Henry.png'\nimport 'webrtc-adapter'\nimport { formatTime } from '../../helpers'\nimport firebase from 'firebase';\nimport useVideoRoom from '../../hooks/useVideoRoom'\nimport useTimer from '../../hooks/useTimer'\nimport useUserName from '../../hooks/useUserName'\n\nconst roomsRef = firestoreFirebase.collection('/rooms');\nconst usersRef = firestoreFirebase.collection('/users');\n\nconst AudioChat = (props) => {\n\n  const {\n    doVideoOffer,\n    doCandidate,\n    roomMetadata,\n    videoStep,\n    doAnswer,\n    me,\n    leaveRoom,\n  } = props;\n\n  const remoteAudioRef = useRef(null);\n  const { timer, handleStart, handleReset } = useTimer();\n  const [mute, setMute] = useState(false);\n  const [localconnection, localstream, localAudioRef] = useVideoRoom(videoStep, false);\n  const [userName1] = useUserName(roomMetadata.participants.filter(e => e !== me.id)[0])\n\n  const [displayVideoScreen, setDisplayVideoScreen] = useState(false);\n\n  // Listening on Room with id === paricitpant.id\n  const RoomQuery = roomsRef\n    .where(firebase.firestore.FieldPath.documentId(), \"==\", roomMetadata.id);\n  const [snapshot1, loading1, error1] = useCollectionData(RoomQuery, { idField: 'id' });\n\n  // Listening on updating my candidate field.\n  const UserQuery = usersRef\n    .where(firebase.firestore.FieldPath.documentId(),\n      \"==\",\n      roomMetadata.participants.filter(e => e === me.id)[0]);\n  const [snapshot2, loading2, error2] = useCollectionData(UserQuery, { idField: 'id' });\n\n  // Caller Receive Answer.\n  useEffect(() => {\n    if (!loading1 && snapshot1[0].type === 'answer' && snapshot1[0].from !== me.id) {\n      async function StartingCall() {\n        const answer = JSON.parse(snapshot1[0].answer)\n        await localconnection.setRemoteDescription(answer);\n      }\n      StartingCall()\n    }\n    return handleReset();\n  }, [loading1, snapshot1])\n\n  // Setting candidate Data after filling remoteDescription value.\n  useEffect(() => {\n    if (!loading2 &&\n      !loading1 &&\n      snapshot1[0].type === 'answer' &&\n      snapshot2[0].VideoRoom.type === 'candidate' &&\n      localconnection.remoteDescription !== null\n    ) {\n      // apply the new received candidate to the connection\n      async function addCandidateCall() {\n        const candidate = JSON.parse(snapshot2[0].VideoRoom.candidate)\n        await localconnection.addIceCandidate(new RTCIceCandidate(candidate))\n        setDisplayVideoScreen(true)\n        handleStart();\n      }\n      addCandidateCall()\n    }\n    return handleReset();\n  }, [loading1, loading2, snapshot1, snapshot2, videoStep]);\n\n  useEffect(() => {\n    if (!loading1 &&\n      snapshot1[0].type === 'leave'\n    ) {\n      leaveRoom(me.id,\n        roomMetadata.participants.filter(e => e !== me.id),\n        roomMetadata.id, localconnection, localstream, localAudioRef,\n        displayVideoScreen, setDisplayVideoScreen)\n\n    }\n  }, [loading1, snapshot1]);\n\n  const renderCallComponent = () => {\n    return <div>\n      {!loading1 && snapshot1[0].type === 'offer' && snapshot1[0].from === me.id ?\n        <ProfilButton>Waiting {userName1} Response </ProfilButton> :\n        <ProfilButton onClick={() => sendOfferCall(localconnection,\n          localstream,\n          roomMetadata,\n          me,\n          remoteAudioRef,\n          doCandidate,\n          doVideoOffer)}>\n          Call {userName1}\n        </ProfilButton>\n      }\n    </div>\n  }\n\n  const renderAnswerComponent = () => {\n    return <div>\n      <ProfilButton onClick={() => sendAnswerCall(localconnection,\n        localstream,\n        roomMetadata,\n        snapshot1[0],\n        me,\n        remoteAudioRef,\n        doCandidate,\n        doAnswer\n      )}>Accept</ProfilButton>\n      <ProfilButton onClick={() => leaveRoom(me.id,\n        roomMetadata.participants.filter(e => e !== me.id),\n        roomMetadata.id, localconnection, localstream, localAudioRef,\n        displayVideoScreen, setDisplayVideoScreen)} >Decline</ProfilButton>\n    </div>\n  }\n\n\n  const renderTwoVideoScreen = () => <div id=\"screenShare\"><audio\n    className=\"videoInsert\"\n    muted={mute}\n    ref={remoteAudioRef}\n    autoPlay\n    playsInline>\n  </audio>\n    <audio\n      className=\"video\" muted ref={localAudioRef} autoPlay playsInline>\n    </audio>\n    <img src={jhon} alt=\"profil\" id=\"profil\" />\n    <h1>{userName1}</h1>\n    <h2>{formatTime(timer)}</h2>\n    <div id=\"bottom\">\n      {mute ? <img alt=\"silent\" onClick={() => setMute(!mute)} src={silenticon} /> :\n        <img alt=\"silent\" onClick={() => setMute(!mute)} src={endreceiveaudiocallicons} />\n      }\n      <img src={muteicon} alt=\"micro\" />\n      <ProfilButton\n        onClick={() => {\n          leaveRoom(me.id,\n            roomMetadata.participants.filter(e => e !== me.id),\n            roomMetadata.id, localconnection, localstream, localAudioRef,\n            displayVideoScreen, setDisplayVideoScreen);\n\n        }}>End Call</ProfilButton>\n      <img src={keypadicon} alt=\"keypadicon\" />\n      <img src={volumeicon} alt=\"volumeicon\" />\n    </div>\n  </div>\n\n\n  const handleVideoChat = () => {\n\n    return <>\n      <div id=\"requestStep\">\n        <img src={jhon} alt=\"profil\" id=\"profil\" />\n        <audio id=\"profil\"\n          style={{ display: 'none' }}\n          muted ref={localAudioRef} autoPlay playsInline></audio>\n        <audio ref={remoteAudioRef}\n          style={{ display: 'none' }}\n          autoPlay\n          playsInline>\n        </audio>\n        <img alt=\"img\" src={receiveaudiocallicon} />\n        {\n          loading1 ? <h2>loading1..</h2> :\n            (snapshot1[0].from === '' || snapshot1[0].from === me.id) ?\n              renderCallComponent() :\n              renderAnswerComponent()}\n      </div>\n      {renderTwoVideoScreen()}\n    </>\n\n\n  };\n\n  return (\n    <Style.Wrapper display={displayVideoScreen}>\n      {handleVideoChat()}\n    </Style.Wrapper>\n  );\n};\n\nexport default AudioChat;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/store/WebChat/actionType.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/store/Contact/actionType.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/LandingLayout/NavBar/index.js",["595"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Style from './styles';\nimport Logo from '../../../Illustration/hichatylogo.svg';\n\nconst Header = () => (\n  <Style.Wrapper>\n    <Style.Logo>\n      <Link to=\"/\"><img src={Logo} /></Link>\n    </Style.Logo>\n    <ul>\n      <Link to=\"/login\"><li> Login</li></Link>\n      <Link to=\"/signup\"><li>Register</li></Link>\n    </ul>\n  </Style.Wrapper>\n);\n\nexport default Header;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Share/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Model/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/Footer/index.js",["596","597"],"import React from 'react';\nimport * as Style from './style';\nimport FooterLogo from '../../../Illustration/Poweredbydevshubha.svg';\nimport EnjoeeMsg from '../../../Illustration/Enjoee-msg.svg';\n\nconst Footer = () => (\n  <Style.Wrapper>\n    <img src={FooterLogo} />\n    <Style.Details>\n      <ul>\n        <li>About Us</li>\n        <li>Support</li>\n        <li>Api</li>\n        <li>Privacy</li>\n        <li>Terms</li>\n      </ul>\n      <img src={EnjoeeMsg} />\n    </Style.Details>\n  </Style.Wrapper>\n\n);\n\nexport default Footer;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/NavBar/index.js",["598","599","600","601","602","603"],"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport * as Style from './styles';\nimport Logo from '../../../Illustration/hichatylogo.svg';\nimport ActiveContact from '../../../Illustration/Icon/Active/Contact.svg';\nimport ActiveGroup from '../../../Illustration/Icon/Active/Group.svg';\nimport ActiveHistory from '../../../Illustration/Icon/Active/History.svg';\nimport ActiveTemporary from '../../../Illustration/Icon/Active/Temporary.svg';\nimport Contact from '../../../Illustration/Icon/Regular/Contact.svg';\nimport Group from '../../../Illustration/Icon/Regular/Group.svg';\nimport History from '../../../Illustration/Icon/Regular/History.svg';\nimport Temporary from '../../../Illustration/Icon/Regular/Temporary.svg';\n\nconst Header = (props) => {\n  const [iconSelected, setIconSelected] = useState(0);\n  const { me } = props;\n  const location = useLocation();\n\n  const renderStyleNav = () => {\n    switch (location.pathname) {\n      case '/alert':\n        return setIconSelected(0);\n      case '/contact':\n        return setIconSelected(1);\n      case '/history':\n        return setIconSelected(2);\n      case '/chat':\n        return setIconSelected(3);\n      case '/groups':\n        return setIconSelected(4);\n      default: return setIconSelected(0);\n    }\n  };\n\n  useEffect(() => {\n    renderStyleNav();\n  }, [location.pathname]);\n\n  return (\n    <Style.Wrapper>\n      <Style.Logo>\n        <Link to=\"/\"><img src={Logo} /></Link>\n      </Style.Logo>\n      <Style.NavBar>\n        <Link to=\"/contact\">\n          <li>\n            <img src={iconSelected === 1 ? ActiveContact : Contact} />\n            {' '}\n            <span>Contacts</span>\n          </li>\n        </Link>\n        <Link to=\"/history\">\n          <li>\n            <img src={iconSelected === 2 ? ActiveHistory : History} />\n            {' '}\n            <span>History</span>\n          </li>\n        </Link>\n        <Link to=\"/chat\">\n          <li>\n            <img src={iconSelected === 3 ? ActiveTemporary : Temporary} />\n            <span>Tem. Chat</span>\n          </li>\n        </Link>\n        <Link to=\"/groups\">\n          <li>\n            <img src={iconSelected === 4 ? ActiveGroup : Group} />\n            {' '}\n            <span>Group</span>\n          </li>\n        </Link>\n        <li>\n          {' '}\n          <Link to=\"/profil\">\n            {' '}\n            {me.avatar ? <img alt=\"profil\" src={me.avatar} /> : <img alt=\"profil\" src={Logo} />}\n          </Link>\n          {' '}\n        </li>\n      </Style.NavBar>\n    </Style.Wrapper>\n  );\n};\n\nexport default Header;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/OTP/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/AudioChat/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/ChatScreen/Words.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/ChatScreen/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/UI/ChatInput.js",["604","605","606","607","608"],"import React from 'react';\nimport { Input, ChatContainer } from './style';\nimport Corporateemployee from '../../Illustration/Corporateemployee.svg';\nimport File from '../../Illustration/File.svg';\nimport Camera from '../../Illustration/Icon/Web/Action/Camera.svg';\nimport Image from '../../Illustration/Icon/Web/Action/Image.svg';\nimport Smile from '../../Illustration/Icon/Web/Action/Smile.svg';\n\nconst ChatInput = ({\n  placeholder, name, iconSearch, ...props\n}) => (\n  <ChatContainer>\n    <Input\n      type=\"text\"\n      name={name}\n      placeholder={placeholder}\n      {...props}\n    />\n    <ul>\n      <img src={Smile} />\n      <img src={Camera} />\n      <img src={Image} />\n      <img src={File} />\n      <img src={Corporateemployee} />\n    </ul>\n\n  </ChatContainer>\n);\n\nexport default ChatInput;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/Card/index.js",["609","610","611","612","613"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Style from './style';\nimport ChatIcon from '../../../Illustration/Chat.svg';\nimport AudioCall from '../../../Illustration/AudioCall.svg';\nimport More from '../../../Illustration/More.svg';\nimport Stroke from '../../../Illustration/Stroke.svg';\n\nconst Card = (props) => {\n  const {\n    picture,\n    name,\n    detail,\n    history,\n  } = props;\n\n  const historyLocation = useHistory();\n\n  const HandleVideo = () => {\n    historyLocation.push({\n      pathname: '/alert',\n      state: 3,\n    });\n  };\n\n  const HandleAudio = () => {\n    historyLocation.push({\n      pathname: '/alert',\n      state: 2,\n\n    });\n  };\n\n  const HandleChat = () => {\n    historyLocation.push({\n      pathname: '/alert',\n      state: 1,\n    });\n  };\n\n  return (\n    <Style.Wrapper>\n      <Style.CardContainer>\n        <img className=\"profil\" src={picture} />\n        <Style.Description>\n          <Style.PersonalInfo>\n            <h1>{name}</h1>\n            <span>{detail}</span>\n          </Style.PersonalInfo>\n          <Style.IconContainer>\n            <div>\n              <img src={ChatIcon} onClick={() => HandleChat()} />\n              <span>{history?.message}</span>\n            </div>\n            <div>\n              <img src={AudioCall} onClick={() => HandleAudio()} />\n              <span>{history?.call}</span>\n            </div>\n            <div>\n              <img src={Stroke} onClick={() => HandleVideo()} />\n              <span>{history?.video}</span>\n            </div>\n            <div>\n              <img src={More} />\n              {' '}\n            </div>\n          </Style.IconContainer>\n        </Style.Description>\n      </Style.CardContainer>\n    </Style.Wrapper>\n  );\n};\n\nexport default Card;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/Contact/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/GroupPerson/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/AddGroup/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/LandingLayout/NavBar/styles.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Model/styles.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/Card/index.js",["614","615"],"import React, { useState } from 'react';\nimport PinInput from 'react-pin-input';\nimport * as Style from './style';\nimport ChatIcon from '../../../Illustration/Chat.svg';\nimport More from '../../../Illustration/More.svg';\nimport Model from '../../Model';\nimport SortInput from '../../UI/ProfilSelector';\nimport FooterButton from '../../UI/FooterButton';\nimport Picture from '../../../Illustration/Henry.png';\nimport Time from '../Time.json';\nimport useUserName from '../../../hooks/useUserName';\n\nconst TeamChatCard = (props) => {\n  const {\n    next, NextCode, AddContactToTeamChat,\n    MyTeamChatNotification, ConfirmationModel,\n    step, id, me, picture, goToFirstStep, name, PictureView, GoToPrivateRoom, teamChatContact, detail,\n  } = props;\n  const [contactId, setContactId] = useState('')\n  const [userName1] = useUserName(id)\n  const [myName] = useUserName(me.id)\n  const [duration, setDuration] = useState('')\n  const [receiveName] = useUserName(contactId)\n  const [code, setCode] = useState('')\n  const [time, setTime] = useState('')\n  const [open, setOpen] = useState(false);\n  const [pin, setPin] = useState({\n    1: '', 2: '', 3: '', 4: '',\n  });\n  const [ConfirmationPin, setConfirmationPin] = useState({\n    1: '', 2: '', 3: '', 4: '',\n  });\n\n  const handleCloseModal = () => {\n    setOpen(false);\n    document.body.style.overflow = 'scroll';\n  };\n\n  // Teamchat\n  const handleChange = (selectedTime) => {\n    setTime(selectedTime)\n  }\n\n  const Card = () => {\n    switch (step) {\n      case 1:\n        return (\n          <Style.CardTemModel>\n            <Style.CardWrapper>\n              <h1>Welcome to Temporary Chat</h1>\n              <span>Select your duration for Temporary chat</span>\n              <SortInput\n                value={time}\n                onChange={handleChange}\n                options={Time}\n                width=\"275px\"\n                border=\"1px solid #4A4A4A\" />\n              <FooterButton onClick={() => next(id, time)}>Generate PIn</FooterButton>\n            </Style.CardWrapper>\n          </Style.CardTemModel>\n        );\n      case 2:\n        return (\n          <Style.CardTemModel>\n            <Style.CardWrapper>\n              <span>\n                Please Create Pin and Share\n                with {userName1} & Enjoy Messanger\n                Services on Enjoee\n              </span>\n              <PinInput\n                length={4}\n                value={pin}\n                secret\n                onChange={(value, index) => setPin((prev) => ({ ...prev, [index]: value }))}\n                type=\"numeric\"\n                inputMode=\"number\"\n                style={{ width: '275px', height: '40px' }}\n                inputStyle={{ borderRadius: '5px', borderColor: '#47525D', height: '100%' }}\n                inputFocusStyle={{ borderColor: 'blue' }}\n                onComplete={(value, index) => setPin((prev) => ({ ...prev, [index]: value }))}\n                autoSelect\n                regexCriteria={/^[ A-Za-z0-9_@./#&+-]*$/}\n              />\n              <FooterButton onClick={() => NextCode(id, pin[3], setOpen)}>Send</FooterButton>\n            </Style.CardWrapper>\n          </Style.CardTemModel>\n        );\n      case 3:\n        return (\n          <Style.CardTemModel>\n            <Style.CardWrapper>\n              <span>\n                Hello, {myName}, please enter this code {code},\n                  generated by {receiveName} for temporary chat\n                enjoee messagner service on ENJOEE\n              </span>\n              <PinInput\n                length={4}\n                secret\n                onChange={(value, index) => setConfirmationPin((prev) => ({ ...prev, [index]: value }))}\n                type=\"numeric\"\n                inputMode=\"number\"\n                style={{ width: '275px', height: '40px' }}\n                inputStyle={{ borderRadius: '5px', borderColor: '#47525D', height: '100%' }}\n                inputFocusStyle={{ borderColor: 'blue' }}\n                onComplete={(value, index) => setConfirmationPin((prev) => ({ ...prev, [index]: value }))}\n                autoSelect\n                regexCriteria={/^[ A-Za-z0-9_@./#&+-]*$/}\n              />\n              <FooterButton onClick={() => {\n                if (ConfirmationPin[3] === code) {\n                  AddContactToTeamChat(contactId, duration, ConfirmationPin[3], setOpen)\n                } else {\n                  alert('incorrect code')\n                }\n              }}>Done</FooterButton>\n            </Style.CardWrapper>\n          </Style.CardTemModel>\n        );\n      default: return null;\n    }\n  };\n\n  const handleDurationModal = () => {\n    if (MyTeamChatNotification.length > 0) {\n      (MyTeamChatNotification.every(contact => {\n        if (contact.id === id) {\n          setContactId(contact.id)\n          setCode(contact.codeConfirmation)\n          setDuration(contact.duration)\n          ConfirmationModel()\n          setOpen(true);\n        } else {\n          goToFirstStep()\n          setOpen(true)\n        }\n      }))\n    } else {\n      if (teamChatContact.length > 0) {\n        teamChatContact.every(contact => {\n          if (contact.contactId !== id) {\n            goToFirstStep()\n            setOpen(true)\n          }\n        })\n      } else {\n        goToFirstStep()\n        setOpen(true)\n      }\n    }\n  };\n\n  const handleLeftDuration = () => {\n\n    if (teamChatContact.length > 0) {\n      return teamChatContact.map(contact => {\n        if (contact.contactId === id) {\n          return <>\n            <div id=\"time\">{contact.duration} Left</div>\n            <img alt=\"chat\" src={ChatIcon} onClick={() => GoToPrivateRoom(id)} />\n          </>\n        } else {\n          return <img alt=\"chat\" src={ChatIcon} onClick={() => handleDurationModal()} />\n        }\n      })\n    } else {\n      return <img alt=\"chat\" src={ChatIcon} onClick={() => handleDurationModal()} />\n\n    }\n  }\n\n  return (\n    <>\n      <Model\n        onClose={handleCloseModal}\n        open={open}\n      >\n        {Card()}\n      </Model>\n      <Style.Wrapper>\n        <Style.CardContainer>\n          <div onClick={() => handleDurationModal()}>\n            {PictureView ? picture ? <img alt=\"profil\" className=\"profil\" src={picture} /> :\n              <img alt=\"profil\" className=\"profil\" src={Picture} /> : null}\n          </div>\n          <Style.Description>\n            <Style.PersonalInfo>\n              <h1>{name}</h1>\n              <span>{detail}</span>\n            </Style.PersonalInfo>\n            <Style.IconContainer>\n              {handleLeftDuration()}\n              <img alt=\"more\" src={More} />\n            </Style.IconContainer>\n          </Style.Description>\n        </Style.CardContainer>\n      </Style.Wrapper>\n\n    </>\n  );\n};\n\nexport default TeamChatCard;\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/GroupPerson/Card.js",["616","617","618","619"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Style from './CardStyle';\nimport ChatIcon from '../../../Illustration/Chat.svg';\nimport AudioCall from '../../../Illustration/AudioCall.svg';\nimport More from '../../../Illustration/More.svg';\nimport Stroke from '../../../Illustration/Stroke.svg';\nimport Joli from '../../../Illustration/Joli.png';\nconst Card = (props) => {\n  const {\n    picture,\n    name,\n    detail,\n    PictureView,\n    friends, me\n  } = props;\n\n\n  const historyLocation = useHistory();\n  const [toggle, setToggle] = useState(false);\n  const HandleVideo = () => {\n    historyLocation.push({\n      pathname: '/alert',\n      state: 3,\n    });\n  };\n\n  const HandleAudio = () => {\n    historyLocation.push({\n      pathname: '/alert',\n      state: 2,\n    });\n  };\n\n  const HandleChat = () => {\n    historyLocation.push({\n      pathname: '/alert',\n      state: 1,\n    });\n  };\n\n  return (\n    <Style.Wrapper>\n      <Style.CardContainer>\n        {PictureView === \"everybody\" ? <img alt=\"profil\" className=\"profil\" src={picture} /> :\n          friends.includes(me.id) ? <img alt=\"profil\" className=\"profil\" src={Joli} /> : null\n        }\n        <Style.Description>\n          <Style.PersonalInfo>\n            <h1>{name}</h1>\n            <span>{detail}</span>\n          </Style.PersonalInfo>\n          <Style.IconContainer>\n            <div>\n              {' '}\n              <img src={ChatIcon} onClick={() => HandleChat()} />\n            </div>\n            <div>\n              {' '}\n              <img src={AudioCall} onClick={() => HandleAudio()} />\n            </div>\n            <div>\n              {' '}\n              <img src={Stroke} onClick={() => HandleVideo()} />\n            </div>\n            <div>\n              <img src={More} onClick={() => setToggle(!toggle)} />\n              {toggle && (\n                <ul>\n                  <li>Admin</li>\n                  <li>Delete</li>\n                  <li>Exit Group</li>\n                </ul>\n              )}\n\n            </div>\n          </Style.IconContainer>\n        </Style.Description>\n      </Style.CardContainer>\n    </Style.Wrapper>\n  );\n};\nexport default React.memo(Card);\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/Contact/Card.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/TeamChat/Card/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/History/Card/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/NavBar/styles.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/Layout/Footer/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/GroupPerson/CardStyle.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/Contact/CardStyle.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useUserData.js",["620"],"import { useCallback, useEffect, useState } from 'react';\nimport { getUserDataById } from '../helpers'\n\n\nconst useUserData = (Members) => {\n    const [usersData, setUsersData] = useState([])\n\n    const usersDataMemo = useCallback(async () => {\n        const data = await Members.map(async e => {\n            const user = await getUserDataById(e);\n            return user;\n        })\n        Promise.all(data).then((values) => {\n            setUsersData(values)\n        });\n\n    }, [Members])\n\n    useEffect(() => {\n        usersDataMemo()\n    }, [Members])\n\n    return [usersData]\n}\n\nexport default useUserData;","/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/AddGroup/Card.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Components/GroupChat/AddGroup/CardStyle.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useUserName.js",["621"],"import { useCallback, useEffect, useState } from 'react';\nimport { getUserNameById } from '../helpers'\n\nconst useUserName = (id) => {\n    const [userName, setUserName] = useState('')\n\n    const usersNameMemo = useCallback(async () => {\n        await getUserNameById(id).then(res => {\n            setUserName(res)\n        })\n\n    }, [id])\n\n    useEffect(() => {\n        usersNameMemo()\n    }, [id])\n\n    return [userName]\n}\n\nexport default useUserName;","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/AllGroups/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/Contact/index.js",["622"],"import React, { useState, useEffect, useCallback } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { Wrapper } from '../style';\nimport BodyContainer from '../../../Common/Body';\nimport DumbMyContact from '../../../Components/GroupChat/Contact';\nimport { GroupBar, ButtonContainer } from '../style';\nimport SearchInput from '../../../Components/UI/SearchInput';\nimport Rectangle380 from '../../../Illustration/Rectangle380.svg';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { firestoreFirebase } from '../../../firebaseService/FirebaseIndex';\nimport {\n  selectGroupPerson,\n  removeGroupPerson,\n  addNewGroup,\n  updateMember,\n  getGroupById,\n} from '../../../store/GroupChat/action';\nimport { fetchMyData } from '../../../store/Me/action';\n\nconst userRef = firestoreFirebase.collection('/users');\n\nconst Contact = (props) => {\n\n  const {\n    selectGroupPerson,\n    removeGroupPerson,\n    addNewGroup,\n    updateMember,\n    getGroupById,\n    fetchMyData\n  } = props;\n\n  const [name, setName] = useState('');\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addNewGroup(name)\n  };\n\n  const dispatch = useDispatch();\n\n  const fetchMyDataCall = useCallback(\n    () => dispatch(fetchMyData),\n    [dispatch, fetchMyData]\n  );\n\n  const query2 = userRef;\n\n  const GroupPerson = useSelector((state) => state.GroupChatReducer.GroupPerson)\n  const groupMember = useSelector((state) => state.GroupChatReducer.groupMember)\n  const groupError = useSelector((state) => state.GroupChatReducer.groupError);\n  const me = useSelector((state) => state.MeReducer.Me);\n  const [AllUsers, loading, error] = useCollectionData(query2, { idField: 'id' });\n\n  useEffect(() => {\n    fetchMyDataCall();\n  }, [fetchMyDataCall])\n\n  const GetActualMember = () => {\n    return AllUsers.filter(e => {\n      return !groupMember.members.includes(e.id)\n    })\n  }\n\n  useEffect(() => {\n    if (props.match.params.id !== undefined) {\n      getGroupById(props.match.params.id)\n    }\n  }, [getGroupById, props.match.params.id])\n\n  return (\n    loading ? <h1>LOaidng ...</h1> :\n      <Wrapper as={BodyContainer}>\n        <GroupBar>\n          <img alt=\"add\" src={Rectangle380} />\n          <form onSubmit={handleSubmit}>\n            <SearchInput required placeholder=\"Group name\"\n              value={props.match.params.id !== undefined ? groupMember.name : name}\n              disabled={props.match.params.id !== undefined ? true : false}\n              onChange={(e) => setName(e.target.value)} name=\"groupname\" />\n            {groupError}\n            <ButtonContainer>\n              {props.match.params.id === undefined ? <button style={{ zIndex: 9999 }}\n                onClick={() => addNewGroup()} >Done</button> :\n                <button style={{ zIndex: 9999 }} onClick={() => updateMember(props.match.params.id)}>\n                  Update Member\n                  </button>}\n            </ButtonContainer>\n          </form>\n          <SearchInput style={{ width: \"70px\" }} disabled value={GroupPerson.length} />\n        </GroupBar>\n        <DumbMyContact\n          selectGroupPerson={selectGroupPerson}\n          removeGroupPerson={removeGroupPerson}\n          contact={props.match.params.id !== undefined ? GetActualMember() :\n            AllUsers}\n          GroupPerson={GroupPerson}\n          me={me}\n        />\n      </Wrapper >\n  );\n};\n\nexport default connect(null,\n  {\n    selectGroupPerson,\n    removeGroupPerson,\n    addNewGroup,\n    updateMember,\n    getGroupById,\n    fetchMyData\n  })(Contact);\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/GroupsDetails/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChat/index.js",["623","624"],"import React, { useCallback, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport SearchInput from '../../Components/UI/SearchInput';\nimport SortInput from '../../Components/UI/SortInput';\nimport * as Style from './style';\nimport BodyContainer from '../../Common/Body';\nimport {\n  next, NextCode,\n  ConfirmationModel,\n  AddContactToTeamChat,\n  goToFirstStep,\n  GoToPrivateRoom,\n\n} from '../../store/TeamChat/action';\nimport DumbTeamChatComponent from '../../Components/TeamChat';\nimport { fetchMyData } from '../../store/Me/action';\n\n\nconst userRef = firestoreFirebase.collection('/users');\n\nconst TeamChat = (props) => {\n  const { step, fetchMyData, AddContactToTeamChat,\n    next, ConfirmationModel, NextCode, GoToPrivateRoom,\n    goToFirstStep } = props;\n  const dispatch = useDispatch();\n\n  const fetchMyDataCall = useCallback(\n    () => dispatch(fetchMyData),\n    [dispatch, fetchMyData]\n  );\n\n  const goToFirstStepCall = useCallback(\n    () => dispatch(goToFirstStep),\n    [dispatch, goToFirstStep]\n  );\n\n  const ConfirmationModelCall = useCallback(\n    () => dispatch(ConfirmationModel),\n    [ConfirmationModel, dispatch]\n  );\n\n\n\n\n  useEffect(() => {\n    fetchMyDataCall();\n  }, [fetchMyDataCall]);\n\n  const me = useSelector((state) => state.MeReducer.Me);\n\n\n  const query2 = userRef\n  const [AllUsers, loading2, error2] = useCollectionData(query2, { idField: 'id' });\n\n  const query = me.id && userRef\n    .where(firebase.firestore.FieldPath.documentId(),\n      \"==\",\n      me.id);\n\n  const [MyData, loading1, error1] = useCollectionData(query, { idField: 'id' });\n\n  return (<Style.Wrapper as={BodyContainer}>\n    <Style.SearchBar>\n      <SearchInput placeholder=\"Search\" name=\"Search\" iconSearch />\n      <SortInput width=\"150px\" height=\"40px\" />\n    </Style.SearchBar>\n    {loading2 ? <h1>Loading ...</h1> :\n      loading1 ? <h1>Loading ...</h1> :\n\n        <DumbTeamChatComponent\n          TeamData={AllUsers}\n          step={step}\n          next={next}\n          NextCode={NextCode}\n          MyTeamChatNotification={MyData === undefined ? [] :\n            MyData[0].teamChatNotification}\n          teamChatContact={MyData === undefined ? [] :\n            MyData[0].teamChatContact}\n          ConfirmationModel={ConfirmationModelCall}\n          AddContactToTeamChat={AddContactToTeamChat}\n          goToFirstStep={goToFirstStepCall}\n          GoToPrivateRoom={GoToPrivateRoom}\n          me={me}\n        />}\n\n  </Style.Wrapper>\n  );\n};\nconst mapStateToProps = (state) => ({\n  step: state.TeamChatReducer.step,\n});\n\nexport default connect(mapStateToProps,\n  {\n    next,\n    NextCode,\n    ConfirmationModel,\n    fetchMyData,\n    AddContactToTeamChat,\n    goToFirstStep,\n    GoToPrivateRoom,\n\n  })(TeamChat);\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChat/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChatScreen/index.js",["625","626","627"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport * as Style from './style';\nimport Jolie from '../../Illustration/Henry.png';\nimport Input from '../../Components/UI/AuthInput';\nimport BodyContainer from '../../Common/Body';\nimport { SendMessage, GetRoomMetaData } from '../../store/WebChat/action'\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport 'webrtc-adapter';\nimport ChatScreen from '../../Components/ChatScreen';\nimport { firestoreFirebase } from '../../firebaseService/FirebaseIndex';\nimport useTimer from '../../hooks/useTimer'\nimport { ChangeChatDuration } from '../../store/TeamChat/action';\nimport useTimerCountDown from '../../hooks/useTimerCountDown';\nimport { fetchMyData } from '../../store/Me/action';\n\nconst messagesRef = firestoreFirebase.collection('/messages');\n\nconst ChatOnline = (props) => {\n  const { SendMessage, fetchMyData, GetRoomMetaData, ChangeChatDuration } = props;\n  const { timer, handleStart } = useTimer();\n  const roomLoading = useSelector((state) => state.WebChatReducer.roomLoading)\n  const roomMetadata = useSelector((state) => state.WebChatReducer.room)\n  const me = useSelector((state) => state.MeReducer.Me)\n  const [fixedDuration, setfixedDuration] = useState(\"0h:00min\");\n  const [leftTime] = useTimerCountDown(timer, fixedDuration);\n\n  const dispatch = useDispatch();\n\n  const fetchMyDataCall = useCallback(\n    () => dispatch(fetchMyData),\n    [dispatch, fetchMyData]\n  );\n\n  useEffect(() => {\n    fetchMyDataCall()\n  }, [fetchMyDataCall]);\n\n  const query = messagesRef\n    .where(\"room\", \"==\", Object.keys(roomMetadata).length >= 1 && roomMetadata.id)\n    .orderBy(\"createdAt\")\n    .limitToLast(24);\n\n  const [snapshot, loading, error] = useCollectionData(query, { idField: 'id' });\n\n  useEffect(() => {\n    GetRoomMetaData(props.match.params.id)\n  }, [GetRoomMetaData, props.match.params.id])\n\n\n  useEffect(() => {\n\n    if (!roomLoading) {\n      handleStart();\n      me.teamChatContact && me.teamChatContact.every((contact => {\n        if (contact.contactId === roomMetadata.participants.filter(e => e !== me.id)[0]) {\n          setfixedDuration(contact.duration)\n        }\n      }))\n    }\n    function EndChat() {\n      if (!roomLoading) {\n        ChangeChatDuration(leftTime, roomMetadata.participants.filter(e => e !== me.id)[0], fixedDuration)\n      }\n    }\n    return () => EndChat()\n  }, [timer, roomLoading, me]);\n\n  return (\n    <Style.Wrapper as={BodyContainer}>\n      <Style.LeftContainer>\n        <div id=\"image\">\n          <img alt=\"profil\" src={Jolie} />\n        </div>\n        <Input type=\"text\" name=\"name\" disabled value={me.name} icon=\"blackcontact\" placeholder=\"Full name\" />\n        <Input type=\"text\" disabled value='Developer' name=\"function\" icon=\"success\" placeholder=\"Developers\" />\n\n      </Style.LeftContainer>\n      <Style.RightContainer backgroundColor={true}>\n        {roomLoading ? <h1>Loading ..</h1> :\n          <ChatScreen\n            roomMetadata={roomMetadata}\n            SendMessage={SendMessage}\n            messages={snapshot}\n            me={me}\n            loading={loading}\n          />}\n      </Style.RightContainer>\n    </Style.Wrapper>\n  );\n};\n\nexport default connect(null,\n  {\n    GetRoomMetaData,\n    SendMessage,\n    ChangeChatDuration,\n    fetchMyData,\n\n  })(ChatOnline);\n\n","/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/TemporaryChatScreen/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/hooks/useTimerCountDown.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Profil/index.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/Profil/style.js",[],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/ChatScreen/index.js",["628"],"/home/ilyass/Freelance/Figma_India_Screen/app/src/Container/ChatGroup/ChatScreen/style.js",[],{"ruleId":"629","severity":1,"message":"630","line":67,"column":31,"nodeType":"631","messageId":"632","endLine":67,"endColumn":36},{"ruleId":"633","replacedBy":"634"},{"ruleId":"635","replacedBy":"636"},{"ruleId":"637","severity":1,"message":"638","line":41,"column":6,"nodeType":"639","endLine":41,"endColumn":8,"suggestions":"640"},{"ruleId":"629","severity":1,"message":"641","line":38,"column":24,"nodeType":"631","messageId":"632","endLine":38,"endColumn":39},{"ruleId":"629","severity":1,"message":"642","line":47,"column":31,"nodeType":"631","messageId":"632","endLine":47,"endColumn":37},{"ruleId":"629","severity":1,"message":"643","line":54,"column":31,"nodeType":"631","messageId":"632","endLine":54,"endColumn":37},{"ruleId":"637","severity":1,"message":"644","line":66,"column":6,"nodeType":"639","endLine":66,"endColumn":27,"suggestions":"645"},{"ruleId":"637","severity":1,"message":"646","line":85,"column":6,"nodeType":"639","endLine":85,"endColumn":48,"suggestions":"647"},{"ruleId":"637","severity":1,"message":"648","line":97,"column":6,"nodeType":"639","endLine":97,"endColumn":27,"suggestions":"649"},{"ruleId":"650","severity":1,"message":"651","line":12,"column":13,"nodeType":"652","endLine":12,"endColumn":37},{"ruleId":"650","severity":1,"message":"651","line":14,"column":13,"nodeType":"652","endLine":14,"endColumn":51},{"ruleId":"637","severity":1,"message":"653","line":25,"column":8,"nodeType":"639","endLine":25,"endColumn":19,"suggestions":"654"},{"ruleId":"629","severity":1,"message":"630","line":57,"column":29,"nodeType":"631","messageId":"632","endLine":57,"endColumn":34},{"ruleId":"629","severity":1,"message":"643","line":61,"column":30,"nodeType":"631","messageId":"632","endLine":61,"endColumn":36},{"ruleId":"629","severity":1,"message":"655","line":3,"column":8,"nodeType":"631","messageId":"632","endLine":3,"endColumn":12},{"ruleId":"629","severity":1,"message":"656","line":4,"column":28,"nodeType":"631","messageId":"632","endLine":4,"endColumn":41},{"ruleId":"629","severity":1,"message":"657","line":11,"column":10,"nodeType":"631","messageId":"632","endLine":11,"endColumn":14},{"ruleId":"629","severity":1,"message":"658","line":16,"column":10,"nodeType":"631","messageId":"632","endLine":16,"endColumn":15},{"ruleId":"629","severity":1,"message":"659","line":2,"column":29,"nodeType":"631","messageId":"632","endLine":2,"endColumn":44},{"ruleId":"650","severity":1,"message":"651","line":28,"column":22,"nodeType":"652","endLine":28,"endColumn":64},{"ruleId":"650","severity":1,"message":"651","line":29,"column":22,"nodeType":"652","endLine":29,"endColumn":69},{"ruleId":"650","severity":1,"message":"651","line":30,"column":22,"nodeType":"652","endLine":30,"endColumn":67},{"ruleId":"650","severity":1,"message":"651","line":31,"column":22,"nodeType":"652","endLine":31,"endColumn":64},{"ruleId":"650","severity":1,"message":"651","line":32,"column":22,"nodeType":"652","endLine":32,"endColumn":68},{"ruleId":"650","severity":1,"message":"651","line":33,"column":22,"nodeType":"652","endLine":33,"endColumn":63},{"ruleId":"650","severity":1,"message":"651","line":34,"column":23,"nodeType":"652","endLine":34,"endColumn":65},{"ruleId":"650","severity":1,"message":"651","line":42,"column":7,"nodeType":"652","endLine":42,"endColumn":27},{"ruleId":"650","severity":1,"message":"651","line":63,"column":15,"nodeType":"652","endLine":63,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":67,"column":15,"nodeType":"652","endLine":67,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":71,"column":15,"nodeType":"652","endLine":71,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":80,"column":15,"nodeType":"652","endLine":80,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":84,"column":15,"nodeType":"652","endLine":84,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":88,"column":15,"nodeType":"652","endLine":88,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":94,"column":7,"nodeType":"652","endLine":94,"endColumn":35},{"ruleId":"650","severity":1,"message":"651","line":52,"column":15,"nodeType":"652","endLine":52,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":52,"column":15,"nodeType":"652","endLine":52,"endColumn":33},{"ruleId":"629","severity":1,"message":"660","line":2,"column":22,"nodeType":"631","messageId":"632","endLine":2,"endColumn":32},{"ruleId":"629","severity":1,"message":"661","line":5,"column":3,"nodeType":"631","messageId":"632","endLine":5,"endColumn":14},{"ruleId":"629","severity":1,"message":"662","line":5,"column":3,"nodeType":"631","messageId":"632","endLine":5,"endColumn":19},{"ruleId":"629","severity":1,"message":"663","line":9,"column":3,"nodeType":"631","messageId":"632","endLine":9,"endColumn":20},{"ruleId":"629","severity":1,"message":"664","line":13,"column":3,"nodeType":"631","messageId":"632","endLine":13,"endColumn":21},{"ruleId":"629","severity":1,"message":"665","line":15,"column":3,"nodeType":"631","messageId":"632","endLine":15,"endColumn":14},{"ruleId":"629","severity":1,"message":"666","line":16,"column":3,"nodeType":"631","messageId":"632","endLine":16,"endColumn":16},{"ruleId":"629","severity":1,"message":"667","line":17,"column":3,"nodeType":"631","messageId":"632","endLine":17,"endColumn":21},{"ruleId":"650","severity":1,"message":"651","line":9,"column":5,"nodeType":"652","endLine":9,"endColumn":61},{"ruleId":"668","severity":1,"message":"669","line":11,"column":1,"nodeType":"670","endLine":116,"endColumn":4},{"ruleId":"650","severity":1,"message":"651","line":17,"column":16,"nodeType":"652","endLine":17,"endColumn":37},{"ruleId":"650","severity":1,"message":"651","line":19,"column":16,"nodeType":"652","endLine":19,"endColumn":34},{"ruleId":"650","severity":1,"message":"651","line":21,"column":16,"nodeType":"652","endLine":21,"endColumn":36},{"ruleId":"650","severity":1,"message":"651","line":23,"column":16,"nodeType":"652","endLine":23,"endColumn":36},{"ruleId":"650","severity":1,"message":"651","line":25,"column":16,"nodeType":"652","endLine":25,"endColumn":37},{"ruleId":"650","severity":1,"message":"651","line":27,"column":16,"nodeType":"652","endLine":27,"endColumn":42},{"ruleId":"650","severity":1,"message":"651","line":29,"column":16,"nodeType":"652","endLine":29,"endColumn":37},{"ruleId":"671","severity":1,"message":"672","line":20,"column":13,"nodeType":"673","messageId":"674","endLine":20,"endColumn":24},{"ruleId":"650","severity":1,"message":"651","line":56,"column":17,"nodeType":"652","endLine":56,"endColumn":38},{"ruleId":"671","severity":1,"message":"672","line":16,"column":13,"nodeType":"673","messageId":"674","endLine":16,"endColumn":24},{"ruleId":"675","severity":1,"message":"676","line":16,"column":5,"nodeType":"677","messageId":"678","endLine":33,"endColumn":6},{"ruleId":"650","severity":1,"message":"651","line":18,"column":16,"nodeType":"652","endLine":18,"endColumn":51},{"ruleId":"650","severity":1,"message":"651","line":20,"column":16,"nodeType":"652","endLine":20,"endColumn":52},{"ruleId":"650","severity":1,"message":"651","line":22,"column":16,"nodeType":"652","endLine":22,"endColumn":52},{"ruleId":"650","severity":1,"message":"651","line":24,"column":16,"nodeType":"652","endLine":24,"endColumn":52},{"ruleId":"650","severity":1,"message":"651","line":26,"column":16,"nodeType":"652","endLine":26,"endColumn":52},{"ruleId":"650","severity":1,"message":"651","line":28,"column":16,"nodeType":"652","endLine":28,"endColumn":57},{"ruleId":"650","severity":1,"message":"651","line":30,"column":16,"nodeType":"652","endLine":30,"endColumn":57},{"ruleId":"650","severity":1,"message":"651","line":32,"column":16,"nodeType":"652","endLine":32,"endColumn":56},{"ruleId":"650","severity":1,"message":"651","line":11,"column":7,"nodeType":"652","endLine":11,"endColumn":25},{"ruleId":"650","severity":1,"message":"651","line":15,"column":9,"nodeType":"652","endLine":15,"endColumn":28},{"ruleId":"650","severity":1,"message":"651","line":69,"column":23,"nodeType":"652","endLine":69,"endColumn":50},{"ruleId":"650","severity":1,"message":"651","line":69,"column":53,"nodeType":"652","endLine":69,"endColumn":84},{"ruleId":"650","severity":1,"message":"651","line":27,"column":9,"nodeType":"652","endLine":27,"endColumn":27},{"ruleId":"629","severity":1,"message":"642","line":47,"column":31,"nodeType":"631","messageId":"632","endLine":47,"endColumn":37},{"ruleId":"629","severity":1,"message":"643","line":54,"column":31,"nodeType":"631","messageId":"632","endLine":54,"endColumn":37},{"ruleId":"637","severity":1,"message":"679","line":66,"column":6,"nodeType":"639","endLine":66,"endColumn":27,"suggestions":"680"},{"ruleId":"637","severity":1,"message":"681","line":86,"column":6,"nodeType":"639","endLine":86,"endColumn":59,"suggestions":"682"},{"ruleId":"637","severity":1,"message":"683","line":98,"column":6,"nodeType":"639","endLine":98,"endColumn":27,"suggestions":"684"},{"ruleId":"650","severity":1,"message":"651","line":9,"column":20,"nodeType":"652","endLine":9,"endColumn":38},{"ruleId":"650","severity":1,"message":"651","line":8,"column":5,"nodeType":"652","endLine":8,"endColumn":29},{"ruleId":"650","severity":1,"message":"651","line":17,"column":7,"nodeType":"652","endLine":17,"endColumn":30},{"ruleId":"637","severity":1,"message":"685","line":37,"column":6,"nodeType":"639","endLine":37,"endColumn":25,"suggestions":"686"},{"ruleId":"650","severity":1,"message":"651","line":42,"column":22,"nodeType":"652","endLine":42,"endColumn":40},{"ruleId":"650","severity":1,"message":"651","line":47,"column":13,"nodeType":"652","endLine":47,"endColumn":71},{"ruleId":"650","severity":1,"message":"651","line":54,"column":13,"nodeType":"652","endLine":54,"endColumn":71},{"ruleId":"650","severity":1,"message":"651","line":61,"column":13,"nodeType":"652","endLine":61,"endColumn":75},{"ruleId":"650","severity":1,"message":"651","line":67,"column":13,"nodeType":"652","endLine":67,"endColumn":67},{"ruleId":"650","severity":1,"message":"651","line":20,"column":7,"nodeType":"652","endLine":20,"endColumn":26},{"ruleId":"650","severity":1,"message":"651","line":21,"column":7,"nodeType":"652","endLine":21,"endColumn":27},{"ruleId":"650","severity":1,"message":"651","line":22,"column":7,"nodeType":"652","endLine":22,"endColumn":26},{"ruleId":"650","severity":1,"message":"651","line":23,"column":7,"nodeType":"652","endLine":23,"endColumn":25},{"ruleId":"650","severity":1,"message":"651","line":24,"column":7,"nodeType":"652","endLine":24,"endColumn":38},{"ruleId":"650","severity":1,"message":"651","line":44,"column":9,"nodeType":"652","endLine":44,"endColumn":49},{"ruleId":"650","severity":1,"message":"651","line":52,"column":15,"nodeType":"652","endLine":52,"endColumn":66},{"ruleId":"650","severity":1,"message":"651","line":56,"column":15,"nodeType":"652","endLine":56,"endColumn":68},{"ruleId":"650","severity":1,"message":"651","line":60,"column":15,"nodeType":"652","endLine":60,"endColumn":65},{"ruleId":"650","severity":1,"message":"651","line":64,"column":15,"nodeType":"652","endLine":64,"endColumn":33},{"ruleId":"687","severity":1,"message":"688","line":127,"column":45,"nodeType":"689","messageId":"690","endLine":127,"endColumn":47},{"ruleId":"687","severity":1,"message":"688","line":141,"column":39,"nodeType":"689","messageId":"690","endLine":141,"endColumn":41},{"ruleId":"650","severity":1,"message":"651","line":56,"column":15,"nodeType":"652","endLine":56,"endColumn":66},{"ruleId":"650","severity":1,"message":"651","line":60,"column":15,"nodeType":"652","endLine":60,"endColumn":68},{"ruleId":"650","severity":1,"message":"651","line":64,"column":15,"nodeType":"652","endLine":64,"endColumn":65},{"ruleId":"650","severity":1,"message":"651","line":67,"column":15,"nodeType":"652","endLine":67,"endColumn":68},{"ruleId":"637","severity":1,"message":"691","line":21,"column":8,"nodeType":"639","endLine":21,"endColumn":17,"suggestions":"692"},{"ruleId":"637","severity":1,"message":"693","line":16,"column":8,"nodeType":"639","endLine":16,"endColumn":12,"suggestions":"694"},{"ruleId":"629","severity":1,"message":"630","line":52,"column":29,"nodeType":"631","messageId":"632","endLine":52,"endColumn":34},{"ruleId":"629","severity":1,"message":"643","line":56,"column":30,"nodeType":"631","messageId":"632","endLine":56,"endColumn":36},{"ruleId":"629","severity":1,"message":"642","line":63,"column":28,"nodeType":"631","messageId":"632","endLine":63,"endColumn":34},{"ruleId":"629","severity":1,"message":"630","line":44,"column":29,"nodeType":"631","messageId":"632","endLine":44,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":55,"column":63,"nodeType":"689","messageId":"690","endLine":55,"endColumn":65},{"ruleId":"637","severity":1,"message":"695","line":67,"column":6,"nodeType":"639","endLine":67,"endColumn":30,"suggestions":"696"},{"ruleId":"629","severity":1,"message":"630","line":44,"column":29,"nodeType":"631","messageId":"632","endLine":44,"endColumn":34},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["697"],"no-negated-in-lhs",["698"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMyName' and 'roomMetadata.participants'. Either include them or remove the dependency array.","ArrayExpression",["699"],"'setDisplayVideo' is assigned a value but never used.","'error1' is assigned a value but never used.","'error2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'localconnection' and 'me.id'. Either include them or remove the dependency array.",["700"],"React Hook useEffect has missing dependencies: 'handleStart' and 'localconnection'. Either include them or remove the dependency array.",["701"],"React Hook useEffect has missing dependencies: 'displayVideoScreen', 'handleReset', 'leaveRoom', 'localVideoRef', 'localconnection', 'localstream', 'me.id', 'roomMetadata.id', and 'roomMetadata.participants'. Either include them or remove the dependency array.",["702"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'video'. Either include it or remove the dependency array.",["703"],"'Jhon' is defined but never used.","'connectRouter' is defined but never used.","'user' is assigned a value but never used.","'token' is assigned a value but never used.","'firebaseStorage' is defined but never used.","'OPEN_MODEL' is defined but never used.","'CLOSE_MODEL' is defined but never used.","'ADD_GROUP_ACTION' is defined but never used.","'ADD_GROUP_BY_NAME' is defined but never used.","'GO_TO_GROUP_DETAIL' is defined but never used.","'ADD_MEMBERS' is defined but never used.","'UPDATE_MEMBER' is defined but never used.","'GO_TO_PRIVATE_ROOM' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'borderColor'.","ObjectExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'handleReset', 'localconnection', and 'me.id'. Either include them or remove the dependency array.",["704"],"React Hook useEffect has missing dependencies: 'handleReset', 'handleStart', and 'localconnection'. Either include them or remove the dependency array.",["705"],"React Hook useEffect has missing dependencies: 'displayVideoScreen', 'leaveRoom', 'localAudioRef', 'localconnection', 'localstream', 'me.id', 'roomMetadata.id', and 'roomMetadata.participants'. Either include them or remove the dependency array.",["706"],"React Hook useEffect has a missing dependency: 'renderStyleNav'. Either include it or remove the dependency array.",["707"],"array-callback-return","Array.prototype.every() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'usersDataMemo'. Either include it or remove the dependency array.",["708"],"React Hook useEffect has a missing dependency: 'usersNameMemo'. Either include it or remove the dependency array.",["709"],"React Hook useEffect has missing dependencies: 'ChangeChatDuration', 'fixedDuration', 'handleStart', 'leftTime', and 'roomMetadata.participants'. Either include them or remove the dependency array.",["710"],"no-global-assign","no-unsafe-negation",{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},"Update the dependencies array to be: [getMyName, roomMetadata.participants]",{"range":"735","text":"736"},"Update the dependencies array to be: [loading1, localconnection, me.id, snapshot1]",{"range":"737","text":"738"},"Update the dependencies array to be: [handleStart, loading1, loading2, localconnection, snapshot1, snapshot2]",{"range":"739","text":"740"},"Update the dependencies array to be: [displayVideoScreen, handleReset, leaveRoom, loading1, localVideoRef, localconnection, localstream, me.id, roomMetadata.id, roomMetadata.participants, snapshot1]",{"range":"741","text":"742"},"Update the dependencies array to be: [video, videoStep]",{"range":"743","text":"744"},"Update the dependencies array to be: [handleReset, loading1, localconnection, me.id, snapshot1]",{"range":"745","text":"746"},"Update the dependencies array to be: [handleReset, handleStart, loading1, loading2, localconnection, snapshot1, snapshot2, videoStep]",{"range":"747","text":"748"},"Update the dependencies array to be: [displayVideoScreen, leaveRoom, loading1, localAudioRef, localconnection, localstream, me.id, roomMetadata.id, roomMetadata.participants, snapshot1]",{"range":"749","text":"750"},"Update the dependencies array to be: [location.pathname, renderStyleNav]",{"range":"751","text":"752"},"Update the dependencies array to be: [Members, usersDataMemo]",{"range":"753","text":"754"},"Update the dependencies array to be: [id, usersNameMemo]",{"range":"755","text":"756"},"Update the dependencies array to be: [timer, roomLoading, me, handleStart, roomMetadata.participants, ChangeChatDuration, leftTime, fixedDuration]",{"range":"757","text":"758"},[1015,1017],"[getMyName, roomMetadata.participants]",[2594,2615],"[loading1, localconnection, me.id, snapshot1]",[3250,3292],"[handleStart, loading1, loading2, localconnection, snapshot1, snapshot2]",[3610,3631],"[displayVideoScreen, handleReset, leaveRoom, loading1, localVideoRef, localconnection, localstream, me.id, roomMetadata.id, roomMetadata.participants, snapshot1]",[790,801],"[video, videoStep]",[2587,2608],"[handleReset, loading1, localconnection, me.id, snapshot1]",[3268,3321],"[handleReset, handleStart, loading1, loading2, localconnection, snapshot1, snapshot2, videoStep]",[3626,3647],"[displayVideoScreen, leaveRoom, loading1, localAudioRef, localconnection, localstream, me.id, roomMetadata.id, roomMetadata.participants, snapshot1]",[1373,1392],"[location.pathname, renderStyleNav]",[546,555],"[Members, usersDataMemo]",[392,396],"[id, usersNameMemo]",[2457,2481],"[timer, roomLoading, me, handleStart, roomMetadata.participants, ChangeChatDuration, leftTime, fixedDuration]"]